// Code generated by protoc-gen-go.
// source: caffe.proto
// DO NOT EDIT!

/*
Package caffe is a generated protocol buffer package.

It is generated from these files:
	caffe.proto

It has these top-level messages:
	BlobProto
	BlobProtoVector
	Datum
	FillerParameter
	NetParameter
	SolverParameter
	SolverState
	NetState
	NetStateRule
	LayerParameter
	TransformationParameter
	AccuracyParameter
	ArgMaxParameter
	ConcatParameter
	ContrastiveLossParameter
	ConvolutionParameter
	DataParameter
	DropoutParameter
	DummyDataParameter
	EltwiseParameter
	ThresholdParameter
	HDF5DataParameter
	HDF5OutputParameter
	HingeLossParameter
	ImageDataParameter
	InfogainLossParameter
	InnerProductParameter
	LRNParameter
	MemoryDataParameter
	MVNParameter
	PoolingParameter
	PowerParameter
	ReLUParameter
	SigmoidParameter
	SliceParameter
	SoftmaxParameter
	TanHParameter
	WindowDataParameter
	V0LayerParameter
*/
package caffe

import proto "code.google.com/p/goprotobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type Phase int32

const (
	Phase_TRAIN Phase = 0
	Phase_TEST  Phase = 1
)

var Phase_name = map[int32]string{
	0: "TRAIN",
	1: "TEST",
}
var Phase_value = map[string]int32{
	"TRAIN": 0,
	"TEST":  1,
}

func (x Phase) Enum() *Phase {
	p := new(Phase)
	*p = x
	return p
}
func (x Phase) String() string {
	return proto.EnumName(Phase_name, int32(x))
}
func (x *Phase) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Phase_value, data, "Phase")
	if err != nil {
		return err
	}
	*x = Phase(value)
	return nil
}

type SolverParameter_SolverMode int32

const (
	SolverParameter_CPU SolverParameter_SolverMode = 0
	SolverParameter_GPU SolverParameter_SolverMode = 1
)

var SolverParameter_SolverMode_name = map[int32]string{
	0: "CPU",
	1: "GPU",
}
var SolverParameter_SolverMode_value = map[string]int32{
	"CPU": 0,
	"GPU": 1,
}

func (x SolverParameter_SolverMode) Enum() *SolverParameter_SolverMode {
	p := new(SolverParameter_SolverMode)
	*p = x
	return p
}
func (x SolverParameter_SolverMode) String() string {
	return proto.EnumName(SolverParameter_SolverMode_name, int32(x))
}
func (x *SolverParameter_SolverMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SolverParameter_SolverMode_value, data, "SolverParameter_SolverMode")
	if err != nil {
		return err
	}
	*x = SolverParameter_SolverMode(value)
	return nil
}

type SolverParameter_SolverType int32

const (
	SolverParameter_SGD      SolverParameter_SolverType = 0
	SolverParameter_NESTEROV SolverParameter_SolverType = 1
	SolverParameter_ADAGRAD  SolverParameter_SolverType = 2
)

var SolverParameter_SolverType_name = map[int32]string{
	0: "SGD",
	1: "NESTEROV",
	2: "ADAGRAD",
}
var SolverParameter_SolverType_value = map[string]int32{
	"SGD":      0,
	"NESTEROV": 1,
	"ADAGRAD":  2,
}

func (x SolverParameter_SolverType) Enum() *SolverParameter_SolverType {
	p := new(SolverParameter_SolverType)
	*p = x
	return p
}
func (x SolverParameter_SolverType) String() string {
	return proto.EnumName(SolverParameter_SolverType_name, int32(x))
}
func (x *SolverParameter_SolverType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SolverParameter_SolverType_value, data, "SolverParameter_SolverType")
	if err != nil {
		return err
	}
	*x = SolverParameter_SolverType(value)
	return nil
}

type LayerParameter_LayerType int32

const (
	LayerParameter_NONE                       LayerParameter_LayerType = 0
	LayerParameter_ABSVAL                     LayerParameter_LayerType = 35
	LayerParameter_ACCURACY                   LayerParameter_LayerType = 1
	LayerParameter_ARGMAX                     LayerParameter_LayerType = 30
	LayerParameter_BNLL                       LayerParameter_LayerType = 2
	LayerParameter_CONCAT                     LayerParameter_LayerType = 3
	LayerParameter_CONTRASTIVE_LOSS           LayerParameter_LayerType = 37
	LayerParameter_CONVOLUTION                LayerParameter_LayerType = 4
	LayerParameter_DATA                       LayerParameter_LayerType = 5
	LayerParameter_DROPOUT                    LayerParameter_LayerType = 6
	LayerParameter_DUMMY_DATA                 LayerParameter_LayerType = 32
	LayerParameter_EUCLIDEAN_LOSS             LayerParameter_LayerType = 7
	LayerParameter_ELTWISE                    LayerParameter_LayerType = 25
	LayerParameter_FLATTEN                    LayerParameter_LayerType = 8
	LayerParameter_HDF5_DATA                  LayerParameter_LayerType = 9
	LayerParameter_HDF5_OUTPUT                LayerParameter_LayerType = 10
	LayerParameter_HINGE_LOSS                 LayerParameter_LayerType = 28
	LayerParameter_IM2COL                     LayerParameter_LayerType = 11
	LayerParameter_IMAGE_DATA                 LayerParameter_LayerType = 12
	LayerParameter_INFOGAIN_LOSS              LayerParameter_LayerType = 13
	LayerParameter_INNER_PRODUCT              LayerParameter_LayerType = 14
	LayerParameter_LRN                        LayerParameter_LayerType = 15
	LayerParameter_MEMORY_DATA                LayerParameter_LayerType = 29
	LayerParameter_MULTINOMIAL_LOGISTIC_LOSS  LayerParameter_LayerType = 16
	LayerParameter_MVN                        LayerParameter_LayerType = 34
	LayerParameter_POOLING                    LayerParameter_LayerType = 17
	LayerParameter_POWER                      LayerParameter_LayerType = 26
	LayerParameter_RELU                       LayerParameter_LayerType = 18
	LayerParameter_SIGMOID                    LayerParameter_LayerType = 19
	LayerParameter_SIGMOID_CROSS_ENTROPY_LOSS LayerParameter_LayerType = 27
	LayerParameter_SILENCE                    LayerParameter_LayerType = 36
	LayerParameter_SOFTMAX                    LayerParameter_LayerType = 20
	LayerParameter_SOFTMAX_LOSS               LayerParameter_LayerType = 21
	LayerParameter_SPLIT                      LayerParameter_LayerType = 22
	LayerParameter_SLICE                      LayerParameter_LayerType = 33
	LayerParameter_TANH                       LayerParameter_LayerType = 23
	LayerParameter_WINDOW_DATA                LayerParameter_LayerType = 24
	LayerParameter_THRESHOLD                  LayerParameter_LayerType = 31
)

var LayerParameter_LayerType_name = map[int32]string{
	0:  "NONE",
	35: "ABSVAL",
	1:  "ACCURACY",
	30: "ARGMAX",
	2:  "BNLL",
	3:  "CONCAT",
	37: "CONTRASTIVE_LOSS",
	4:  "CONVOLUTION",
	5:  "DATA",
	6:  "DROPOUT",
	32: "DUMMY_DATA",
	7:  "EUCLIDEAN_LOSS",
	25: "ELTWISE",
	8:  "FLATTEN",
	9:  "HDF5_DATA",
	10: "HDF5_OUTPUT",
	28: "HINGE_LOSS",
	11: "IM2COL",
	12: "IMAGE_DATA",
	13: "INFOGAIN_LOSS",
	14: "INNER_PRODUCT",
	15: "LRN",
	29: "MEMORY_DATA",
	16: "MULTINOMIAL_LOGISTIC_LOSS",
	34: "MVN",
	17: "POOLING",
	26: "POWER",
	18: "RELU",
	19: "SIGMOID",
	27: "SIGMOID_CROSS_ENTROPY_LOSS",
	36: "SILENCE",
	20: "SOFTMAX",
	21: "SOFTMAX_LOSS",
	22: "SPLIT",
	33: "SLICE",
	23: "TANH",
	24: "WINDOW_DATA",
	31: "THRESHOLD",
}
var LayerParameter_LayerType_value = map[string]int32{
	"NONE":                      0,
	"ABSVAL":                    35,
	"ACCURACY":                  1,
	"ARGMAX":                    30,
	"BNLL":                      2,
	"CONCAT":                    3,
	"CONTRASTIVE_LOSS":          37,
	"CONVOLUTION":               4,
	"DATA":                      5,
	"DROPOUT":                   6,
	"DUMMY_DATA":                32,
	"EUCLIDEAN_LOSS":            7,
	"ELTWISE":                   25,
	"FLATTEN":                   8,
	"HDF5_DATA":                 9,
	"HDF5_OUTPUT":               10,
	"HINGE_LOSS":                28,
	"IM2COL":                    11,
	"IMAGE_DATA":                12,
	"INFOGAIN_LOSS":             13,
	"INNER_PRODUCT":             14,
	"LRN":                       15,
	"MEMORY_DATA":               29,
	"MULTINOMIAL_LOGISTIC_LOSS": 16,
	"MVN":                        34,
	"POOLING":                    17,
	"POWER":                      26,
	"RELU":                       18,
	"SIGMOID":                    19,
	"SIGMOID_CROSS_ENTROPY_LOSS": 27,
	"SILENCE":                    36,
	"SOFTMAX":                    20,
	"SOFTMAX_LOSS":               21,
	"SPLIT":                      22,
	"SLICE":                      33,
	"TANH":                       23,
	"WINDOW_DATA":                24,
	"THRESHOLD":                  31,
}

func (x LayerParameter_LayerType) Enum() *LayerParameter_LayerType {
	p := new(LayerParameter_LayerType)
	*p = x
	return p
}
func (x LayerParameter_LayerType) String() string {
	return proto.EnumName(LayerParameter_LayerType_name, int32(x))
}
func (x *LayerParameter_LayerType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LayerParameter_LayerType_value, data, "LayerParameter_LayerType")
	if err != nil {
		return err
	}
	*x = LayerParameter_LayerType(value)
	return nil
}

type LayerParameter_DimCheckMode int32

const (
	LayerParameter_STRICT     LayerParameter_DimCheckMode = 0
	LayerParameter_PERMISSIVE LayerParameter_DimCheckMode = 1
)

var LayerParameter_DimCheckMode_name = map[int32]string{
	0: "STRICT",
	1: "PERMISSIVE",
}
var LayerParameter_DimCheckMode_value = map[string]int32{
	"STRICT":     0,
	"PERMISSIVE": 1,
}

func (x LayerParameter_DimCheckMode) Enum() *LayerParameter_DimCheckMode {
	p := new(LayerParameter_DimCheckMode)
	*p = x
	return p
}
func (x LayerParameter_DimCheckMode) String() string {
	return proto.EnumName(LayerParameter_DimCheckMode_name, int32(x))
}
func (x *LayerParameter_DimCheckMode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LayerParameter_DimCheckMode_value, data, "LayerParameter_DimCheckMode")
	if err != nil {
		return err
	}
	*x = LayerParameter_DimCheckMode(value)
	return nil
}

type ConvolutionParameter_Engine int32

const (
	ConvolutionParameter_DEFAULT ConvolutionParameter_Engine = 0
	ConvolutionParameter_CAFFE   ConvolutionParameter_Engine = 1
	ConvolutionParameter_CUDNN   ConvolutionParameter_Engine = 2
)

var ConvolutionParameter_Engine_name = map[int32]string{
	0: "DEFAULT",
	1: "CAFFE",
	2: "CUDNN",
}
var ConvolutionParameter_Engine_value = map[string]int32{
	"DEFAULT": 0,
	"CAFFE":   1,
	"CUDNN":   2,
}

func (x ConvolutionParameter_Engine) Enum() *ConvolutionParameter_Engine {
	p := new(ConvolutionParameter_Engine)
	*p = x
	return p
}
func (x ConvolutionParameter_Engine) String() string {
	return proto.EnumName(ConvolutionParameter_Engine_name, int32(x))
}
func (x *ConvolutionParameter_Engine) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ConvolutionParameter_Engine_value, data, "ConvolutionParameter_Engine")
	if err != nil {
		return err
	}
	*x = ConvolutionParameter_Engine(value)
	return nil
}

type DataParameter_DB int32

const (
	DataParameter_LEVELDB DataParameter_DB = 0
	DataParameter_LMDB    DataParameter_DB = 1
)

var DataParameter_DB_name = map[int32]string{
	0: "LEVELDB",
	1: "LMDB",
}
var DataParameter_DB_value = map[string]int32{
	"LEVELDB": 0,
	"LMDB":    1,
}

func (x DataParameter_DB) Enum() *DataParameter_DB {
	p := new(DataParameter_DB)
	*p = x
	return p
}
func (x DataParameter_DB) String() string {
	return proto.EnumName(DataParameter_DB_name, int32(x))
}
func (x *DataParameter_DB) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DataParameter_DB_value, data, "DataParameter_DB")
	if err != nil {
		return err
	}
	*x = DataParameter_DB(value)
	return nil
}

type EltwiseParameter_EltwiseOp int32

const (
	EltwiseParameter_PROD EltwiseParameter_EltwiseOp = 0
	EltwiseParameter_SUM  EltwiseParameter_EltwiseOp = 1
	EltwiseParameter_MAX  EltwiseParameter_EltwiseOp = 2
)

var EltwiseParameter_EltwiseOp_name = map[int32]string{
	0: "PROD",
	1: "SUM",
	2: "MAX",
}
var EltwiseParameter_EltwiseOp_value = map[string]int32{
	"PROD": 0,
	"SUM":  1,
	"MAX":  2,
}

func (x EltwiseParameter_EltwiseOp) Enum() *EltwiseParameter_EltwiseOp {
	p := new(EltwiseParameter_EltwiseOp)
	*p = x
	return p
}
func (x EltwiseParameter_EltwiseOp) String() string {
	return proto.EnumName(EltwiseParameter_EltwiseOp_name, int32(x))
}
func (x *EltwiseParameter_EltwiseOp) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EltwiseParameter_EltwiseOp_value, data, "EltwiseParameter_EltwiseOp")
	if err != nil {
		return err
	}
	*x = EltwiseParameter_EltwiseOp(value)
	return nil
}

type HingeLossParameter_Norm int32

const (
	HingeLossParameter_L1 HingeLossParameter_Norm = 1
	HingeLossParameter_L2 HingeLossParameter_Norm = 2
)

var HingeLossParameter_Norm_name = map[int32]string{
	1: "L1",
	2: "L2",
}
var HingeLossParameter_Norm_value = map[string]int32{
	"L1": 1,
	"L2": 2,
}

func (x HingeLossParameter_Norm) Enum() *HingeLossParameter_Norm {
	p := new(HingeLossParameter_Norm)
	*p = x
	return p
}
func (x HingeLossParameter_Norm) String() string {
	return proto.EnumName(HingeLossParameter_Norm_name, int32(x))
}
func (x *HingeLossParameter_Norm) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(HingeLossParameter_Norm_value, data, "HingeLossParameter_Norm")
	if err != nil {
		return err
	}
	*x = HingeLossParameter_Norm(value)
	return nil
}

type LRNParameter_NormRegion int32

const (
	LRNParameter_ACROSS_CHANNELS LRNParameter_NormRegion = 0
	LRNParameter_WITHIN_CHANNEL  LRNParameter_NormRegion = 1
)

var LRNParameter_NormRegion_name = map[int32]string{
	0: "ACROSS_CHANNELS",
	1: "WITHIN_CHANNEL",
}
var LRNParameter_NormRegion_value = map[string]int32{
	"ACROSS_CHANNELS": 0,
	"WITHIN_CHANNEL":  1,
}

func (x LRNParameter_NormRegion) Enum() *LRNParameter_NormRegion {
	p := new(LRNParameter_NormRegion)
	*p = x
	return p
}
func (x LRNParameter_NormRegion) String() string {
	return proto.EnumName(LRNParameter_NormRegion_name, int32(x))
}
func (x *LRNParameter_NormRegion) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LRNParameter_NormRegion_value, data, "LRNParameter_NormRegion")
	if err != nil {
		return err
	}
	*x = LRNParameter_NormRegion(value)
	return nil
}

type PoolingParameter_PoolMethod int32

const (
	PoolingParameter_MAX        PoolingParameter_PoolMethod = 0
	PoolingParameter_AVE        PoolingParameter_PoolMethod = 1
	PoolingParameter_STOCHASTIC PoolingParameter_PoolMethod = 2
)

var PoolingParameter_PoolMethod_name = map[int32]string{
	0: "MAX",
	1: "AVE",
	2: "STOCHASTIC",
}
var PoolingParameter_PoolMethod_value = map[string]int32{
	"MAX":        0,
	"AVE":        1,
	"STOCHASTIC": 2,
}

func (x PoolingParameter_PoolMethod) Enum() *PoolingParameter_PoolMethod {
	p := new(PoolingParameter_PoolMethod)
	*p = x
	return p
}
func (x PoolingParameter_PoolMethod) String() string {
	return proto.EnumName(PoolingParameter_PoolMethod_name, int32(x))
}
func (x *PoolingParameter_PoolMethod) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PoolingParameter_PoolMethod_value, data, "PoolingParameter_PoolMethod")
	if err != nil {
		return err
	}
	*x = PoolingParameter_PoolMethod(value)
	return nil
}

type PoolingParameter_Engine int32

const (
	PoolingParameter_DEFAULT PoolingParameter_Engine = 0
	PoolingParameter_CAFFE   PoolingParameter_Engine = 1
	PoolingParameter_CUDNN   PoolingParameter_Engine = 2
)

var PoolingParameter_Engine_name = map[int32]string{
	0: "DEFAULT",
	1: "CAFFE",
	2: "CUDNN",
}
var PoolingParameter_Engine_value = map[string]int32{
	"DEFAULT": 0,
	"CAFFE":   1,
	"CUDNN":   2,
}

func (x PoolingParameter_Engine) Enum() *PoolingParameter_Engine {
	p := new(PoolingParameter_Engine)
	*p = x
	return p
}
func (x PoolingParameter_Engine) String() string {
	return proto.EnumName(PoolingParameter_Engine_name, int32(x))
}
func (x *PoolingParameter_Engine) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PoolingParameter_Engine_value, data, "PoolingParameter_Engine")
	if err != nil {
		return err
	}
	*x = PoolingParameter_Engine(value)
	return nil
}

type ReLUParameter_Engine int32

const (
	ReLUParameter_DEFAULT ReLUParameter_Engine = 0
	ReLUParameter_CAFFE   ReLUParameter_Engine = 1
	ReLUParameter_CUDNN   ReLUParameter_Engine = 2
)

var ReLUParameter_Engine_name = map[int32]string{
	0: "DEFAULT",
	1: "CAFFE",
	2: "CUDNN",
}
var ReLUParameter_Engine_value = map[string]int32{
	"DEFAULT": 0,
	"CAFFE":   1,
	"CUDNN":   2,
}

func (x ReLUParameter_Engine) Enum() *ReLUParameter_Engine {
	p := new(ReLUParameter_Engine)
	*p = x
	return p
}
func (x ReLUParameter_Engine) String() string {
	return proto.EnumName(ReLUParameter_Engine_name, int32(x))
}
func (x *ReLUParameter_Engine) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ReLUParameter_Engine_value, data, "ReLUParameter_Engine")
	if err != nil {
		return err
	}
	*x = ReLUParameter_Engine(value)
	return nil
}

type SigmoidParameter_Engine int32

const (
	SigmoidParameter_DEFAULT SigmoidParameter_Engine = 0
	SigmoidParameter_CAFFE   SigmoidParameter_Engine = 1
	SigmoidParameter_CUDNN   SigmoidParameter_Engine = 2
)

var SigmoidParameter_Engine_name = map[int32]string{
	0: "DEFAULT",
	1: "CAFFE",
	2: "CUDNN",
}
var SigmoidParameter_Engine_value = map[string]int32{
	"DEFAULT": 0,
	"CAFFE":   1,
	"CUDNN":   2,
}

func (x SigmoidParameter_Engine) Enum() *SigmoidParameter_Engine {
	p := new(SigmoidParameter_Engine)
	*p = x
	return p
}
func (x SigmoidParameter_Engine) String() string {
	return proto.EnumName(SigmoidParameter_Engine_name, int32(x))
}
func (x *SigmoidParameter_Engine) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SigmoidParameter_Engine_value, data, "SigmoidParameter_Engine")
	if err != nil {
		return err
	}
	*x = SigmoidParameter_Engine(value)
	return nil
}

type SoftmaxParameter_Engine int32

const (
	SoftmaxParameter_DEFAULT SoftmaxParameter_Engine = 0
	SoftmaxParameter_CAFFE   SoftmaxParameter_Engine = 1
	SoftmaxParameter_CUDNN   SoftmaxParameter_Engine = 2
)

var SoftmaxParameter_Engine_name = map[int32]string{
	0: "DEFAULT",
	1: "CAFFE",
	2: "CUDNN",
}
var SoftmaxParameter_Engine_value = map[string]int32{
	"DEFAULT": 0,
	"CAFFE":   1,
	"CUDNN":   2,
}

func (x SoftmaxParameter_Engine) Enum() *SoftmaxParameter_Engine {
	p := new(SoftmaxParameter_Engine)
	*p = x
	return p
}
func (x SoftmaxParameter_Engine) String() string {
	return proto.EnumName(SoftmaxParameter_Engine_name, int32(x))
}
func (x *SoftmaxParameter_Engine) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SoftmaxParameter_Engine_value, data, "SoftmaxParameter_Engine")
	if err != nil {
		return err
	}
	*x = SoftmaxParameter_Engine(value)
	return nil
}

type TanHParameter_Engine int32

const (
	TanHParameter_DEFAULT TanHParameter_Engine = 0
	TanHParameter_CAFFE   TanHParameter_Engine = 1
	TanHParameter_CUDNN   TanHParameter_Engine = 2
)

var TanHParameter_Engine_name = map[int32]string{
	0: "DEFAULT",
	1: "CAFFE",
	2: "CUDNN",
}
var TanHParameter_Engine_value = map[string]int32{
	"DEFAULT": 0,
	"CAFFE":   1,
	"CUDNN":   2,
}

func (x TanHParameter_Engine) Enum() *TanHParameter_Engine {
	p := new(TanHParameter_Engine)
	*p = x
	return p
}
func (x TanHParameter_Engine) String() string {
	return proto.EnumName(TanHParameter_Engine_name, int32(x))
}
func (x *TanHParameter_Engine) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TanHParameter_Engine_value, data, "TanHParameter_Engine")
	if err != nil {
		return err
	}
	*x = TanHParameter_Engine(value)
	return nil
}

type V0LayerParameter_PoolMethod int32

const (
	V0LayerParameter_MAX        V0LayerParameter_PoolMethod = 0
	V0LayerParameter_AVE        V0LayerParameter_PoolMethod = 1
	V0LayerParameter_STOCHASTIC V0LayerParameter_PoolMethod = 2
)

var V0LayerParameter_PoolMethod_name = map[int32]string{
	0: "MAX",
	1: "AVE",
	2: "STOCHASTIC",
}
var V0LayerParameter_PoolMethod_value = map[string]int32{
	"MAX":        0,
	"AVE":        1,
	"STOCHASTIC": 2,
}

func (x V0LayerParameter_PoolMethod) Enum() *V0LayerParameter_PoolMethod {
	p := new(V0LayerParameter_PoolMethod)
	*p = x
	return p
}
func (x V0LayerParameter_PoolMethod) String() string {
	return proto.EnumName(V0LayerParameter_PoolMethod_name, int32(x))
}
func (x *V0LayerParameter_PoolMethod) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(V0LayerParameter_PoolMethod_value, data, "V0LayerParameter_PoolMethod")
	if err != nil {
		return err
	}
	*x = V0LayerParameter_PoolMethod(value)
	return nil
}

type BlobProto struct {
	Num              *int32    `protobuf:"varint,1,opt,name=num,def=0" json:"num,omitempty"`
	Channels         *int32    `protobuf:"varint,2,opt,name=channels,def=0" json:"channels,omitempty"`
	Height           *int32    `protobuf:"varint,3,opt,name=height,def=0" json:"height,omitempty"`
	Width            *int32    `protobuf:"varint,4,opt,name=width,def=0" json:"width,omitempty"`
	Data             []float32 `protobuf:"fixed32,5,rep,packed,name=data" json:"data,omitempty"`
	Diff             []float32 `protobuf:"fixed32,6,rep,packed,name=diff" json:"diff,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *BlobProto) Reset()         { *m = BlobProto{} }
func (m *BlobProto) String() string { return proto.CompactTextString(m) }
func (*BlobProto) ProtoMessage()    {}

const Default_BlobProto_Num int32 = 0
const Default_BlobProto_Channels int32 = 0
const Default_BlobProto_Height int32 = 0
const Default_BlobProto_Width int32 = 0

func (m *BlobProto) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return Default_BlobProto_Num
}

func (m *BlobProto) GetChannels() int32 {
	if m != nil && m.Channels != nil {
		return *m.Channels
	}
	return Default_BlobProto_Channels
}

func (m *BlobProto) GetHeight() int32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return Default_BlobProto_Height
}

func (m *BlobProto) GetWidth() int32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return Default_BlobProto_Width
}

func (m *BlobProto) GetData() []float32 {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *BlobProto) GetDiff() []float32 {
	if m != nil {
		return m.Diff
	}
	return nil
}

type BlobProtoVector struct {
	Blobs            []*BlobProto `protobuf:"bytes,1,rep,name=blobs" json:"blobs,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *BlobProtoVector) Reset()         { *m = BlobProtoVector{} }
func (m *BlobProtoVector) String() string { return proto.CompactTextString(m) }
func (*BlobProtoVector) ProtoMessage()    {}

func (m *BlobProtoVector) GetBlobs() []*BlobProto {
	if m != nil {
		return m.Blobs
	}
	return nil
}

type Datum struct {
	Channels         *int32    `protobuf:"varint,1,opt,name=channels" json:"channels,omitempty"`
	Height           *int32    `protobuf:"varint,2,opt,name=height" json:"height,omitempty"`
	Width            *int32    `protobuf:"varint,3,opt,name=width" json:"width,omitempty"`
	Data             []byte    `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	Label            *int32    `protobuf:"varint,5,opt,name=label" json:"label,omitempty"`
	FloatData        []float32 `protobuf:"fixed32,6,rep,name=float_data" json:"float_data,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *Datum) Reset()         { *m = Datum{} }
func (m *Datum) String() string { return proto.CompactTextString(m) }
func (*Datum) ProtoMessage()    {}

func (m *Datum) GetChannels() int32 {
	if m != nil && m.Channels != nil {
		return *m.Channels
	}
	return 0
}

func (m *Datum) GetHeight() int32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

func (m *Datum) GetWidth() int32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

func (m *Datum) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Datum) GetLabel() int32 {
	if m != nil && m.Label != nil {
		return *m.Label
	}
	return 0
}

func (m *Datum) GetFloatData() []float32 {
	if m != nil {
		return m.FloatData
	}
	return nil
}

type FillerParameter struct {
	Type             *string  `protobuf:"bytes,1,opt,name=type,def=constant" json:"type,omitempty"`
	Value            *float32 `protobuf:"fixed32,2,opt,name=value,def=0" json:"value,omitempty"`
	Min              *float32 `protobuf:"fixed32,3,opt,name=min,def=0" json:"min,omitempty"`
	Max              *float32 `protobuf:"fixed32,4,opt,name=max,def=1" json:"max,omitempty"`
	Mean             *float32 `protobuf:"fixed32,5,opt,name=mean,def=0" json:"mean,omitempty"`
	Std              *float32 `protobuf:"fixed32,6,opt,name=std,def=1" json:"std,omitempty"`
	Sparse           *int32   `protobuf:"varint,7,opt,name=sparse,def=-1" json:"sparse,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *FillerParameter) Reset()         { *m = FillerParameter{} }
func (m *FillerParameter) String() string { return proto.CompactTextString(m) }
func (*FillerParameter) ProtoMessage()    {}

const Default_FillerParameter_Type string = "constant"
const Default_FillerParameter_Value float32 = 0
const Default_FillerParameter_Min float32 = 0
const Default_FillerParameter_Max float32 = 1
const Default_FillerParameter_Mean float32 = 0
const Default_FillerParameter_Std float32 = 1
const Default_FillerParameter_Sparse int32 = -1

func (m *FillerParameter) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_FillerParameter_Type
}

func (m *FillerParameter) GetValue() float32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return Default_FillerParameter_Value
}

func (m *FillerParameter) GetMin() float32 {
	if m != nil && m.Min != nil {
		return *m.Min
	}
	return Default_FillerParameter_Min
}

func (m *FillerParameter) GetMax() float32 {
	if m != nil && m.Max != nil {
		return *m.Max
	}
	return Default_FillerParameter_Max
}

func (m *FillerParameter) GetMean() float32 {
	if m != nil && m.Mean != nil {
		return *m.Mean
	}
	return Default_FillerParameter_Mean
}

func (m *FillerParameter) GetStd() float32 {
	if m != nil && m.Std != nil {
		return *m.Std
	}
	return Default_FillerParameter_Std
}

func (m *FillerParameter) GetSparse() int32 {
	if m != nil && m.Sparse != nil {
		return *m.Sparse
	}
	return Default_FillerParameter_Sparse
}

type NetParameter struct {
	Name             *string           `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Layers           []*LayerParameter `protobuf:"bytes,2,rep,name=layers" json:"layers,omitempty"`
	Input            []string          `protobuf:"bytes,3,rep,name=input" json:"input,omitempty"`
	InputDim         []int32           `protobuf:"varint,4,rep,name=input_dim" json:"input_dim,omitempty"`
	ForceBackward    *bool             `protobuf:"varint,5,opt,name=force_backward,def=0" json:"force_backward,omitempty"`
	State            *NetState         `protobuf:"bytes,6,opt,name=state" json:"state,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *NetParameter) Reset()         { *m = NetParameter{} }
func (m *NetParameter) String() string { return proto.CompactTextString(m) }
func (*NetParameter) ProtoMessage()    {}

const Default_NetParameter_ForceBackward bool = false

func (m *NetParameter) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *NetParameter) GetLayers() []*LayerParameter {
	if m != nil {
		return m.Layers
	}
	return nil
}

func (m *NetParameter) GetInput() []string {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *NetParameter) GetInputDim() []int32 {
	if m != nil {
		return m.InputDim
	}
	return nil
}

func (m *NetParameter) GetForceBackward() bool {
	if m != nil && m.ForceBackward != nil {
		return *m.ForceBackward
	}
	return Default_NetParameter_ForceBackward
}

func (m *NetParameter) GetState() *NetState {
	if m != nil {
		return m.State
	}
	return nil
}

type SolverParameter struct {
	Net                *string                     `protobuf:"bytes,24,opt,name=net" json:"net,omitempty"`
	NetParam           *NetParameter               `protobuf:"bytes,25,opt,name=net_param" json:"net_param,omitempty"`
	TrainNet           *string                     `protobuf:"bytes,1,opt,name=train_net" json:"train_net,omitempty"`
	TestNet            []string                    `protobuf:"bytes,2,rep,name=test_net" json:"test_net,omitempty"`
	TrainNetParam      *NetParameter               `protobuf:"bytes,21,opt,name=train_net_param" json:"train_net_param,omitempty"`
	TestNetParam       []*NetParameter             `protobuf:"bytes,22,rep,name=test_net_param" json:"test_net_param,omitempty"`
	TrainState         *NetState                   `protobuf:"bytes,26,opt,name=train_state" json:"train_state,omitempty"`
	TestState          []*NetState                 `protobuf:"bytes,27,rep,name=test_state" json:"test_state,omitempty"`
	TestIter           []int32                     `protobuf:"varint,3,rep,name=test_iter" json:"test_iter,omitempty"`
	TestInterval       *int32                      `protobuf:"varint,4,opt,name=test_interval,def=0" json:"test_interval,omitempty"`
	TestComputeLoss    *bool                       `protobuf:"varint,19,opt,name=test_compute_loss,def=0" json:"test_compute_loss,omitempty"`
	TestInitialization *bool                       `protobuf:"varint,32,opt,name=test_initialization,def=1" json:"test_initialization,omitempty"`
	BaseLr             *float32                    `protobuf:"fixed32,5,opt,name=base_lr" json:"base_lr,omitempty"`
	Display            *int32                      `protobuf:"varint,6,opt,name=display" json:"display,omitempty"`
	MaxIter            *int32                      `protobuf:"varint,7,opt,name=max_iter" json:"max_iter,omitempty"`
	LrPolicy           *string                     `protobuf:"bytes,8,opt,name=lr_policy" json:"lr_policy,omitempty"`
	Gamma              *float32                    `protobuf:"fixed32,9,opt,name=gamma" json:"gamma,omitempty"`
	Power              *float32                    `protobuf:"fixed32,10,opt,name=power" json:"power,omitempty"`
	Momentum           *float32                    `protobuf:"fixed32,11,opt,name=momentum" json:"momentum,omitempty"`
	WeightDecay        *float32                    `protobuf:"fixed32,12,opt,name=weight_decay" json:"weight_decay,omitempty"`
	RegularizationType *string                     `protobuf:"bytes,29,opt,name=regularization_type,def=L2" json:"regularization_type,omitempty"`
	Stepsize           *int32                      `protobuf:"varint,13,opt,name=stepsize" json:"stepsize,omitempty"`
	Snapshot           *int32                      `protobuf:"varint,14,opt,name=snapshot,def=0" json:"snapshot,omitempty"`
	SnapshotPrefix     *string                     `protobuf:"bytes,15,opt,name=snapshot_prefix" json:"snapshot_prefix,omitempty"`
	SnapshotDiff       *bool                       `protobuf:"varint,16,opt,name=snapshot_diff,def=0" json:"snapshot_diff,omitempty"`
	SolverMode         *SolverParameter_SolverMode `protobuf:"varint,17,opt,name=solver_mode,enum=caffe.SolverParameter_SolverMode,def=1" json:"solver_mode,omitempty"`
	DeviceId           *int32                      `protobuf:"varint,18,opt,name=device_id,def=0" json:"device_id,omitempty"`
	RandomSeed         *int64                      `protobuf:"varint,20,opt,name=random_seed,def=-1" json:"random_seed,omitempty"`
	SolverType         *SolverParameter_SolverType `protobuf:"varint,30,opt,name=solver_type,enum=caffe.SolverParameter_SolverType,def=0" json:"solver_type,omitempty"`
	Delta              *float32                    `protobuf:"fixed32,31,opt,name=delta,def=1e-08" json:"delta,omitempty"`
	DebugInfo          *bool                       `protobuf:"varint,23,opt,name=debug_info,def=0" json:"debug_info,omitempty"`
	SnapshotAfterTrain *bool                       `protobuf:"varint,28,opt,name=snapshot_after_train,def=1" json:"snapshot_after_train,omitempty"`
	XXX_unrecognized   []byte                      `json:"-"`
}

func (m *SolverParameter) Reset()         { *m = SolverParameter{} }
func (m *SolverParameter) String() string { return proto.CompactTextString(m) }
func (*SolverParameter) ProtoMessage()    {}

const Default_SolverParameter_TestInterval int32 = 0
const Default_SolverParameter_TestComputeLoss bool = false
const Default_SolverParameter_TestInitialization bool = true
const Default_SolverParameter_RegularizationType string = "L2"
const Default_SolverParameter_Snapshot int32 = 0
const Default_SolverParameter_SnapshotDiff bool = false
const Default_SolverParameter_SolverMode SolverParameter_SolverMode = SolverParameter_GPU
const Default_SolverParameter_DeviceId int32 = 0
const Default_SolverParameter_RandomSeed int64 = -1
const Default_SolverParameter_SolverType SolverParameter_SolverType = SolverParameter_SGD
const Default_SolverParameter_Delta float32 = 1e-08
const Default_SolverParameter_DebugInfo bool = false
const Default_SolverParameter_SnapshotAfterTrain bool = true

func (m *SolverParameter) GetNet() string {
	if m != nil && m.Net != nil {
		return *m.Net
	}
	return ""
}

func (m *SolverParameter) GetNetParam() *NetParameter {
	if m != nil {
		return m.NetParam
	}
	return nil
}

func (m *SolverParameter) GetTrainNet() string {
	if m != nil && m.TrainNet != nil {
		return *m.TrainNet
	}
	return ""
}

func (m *SolverParameter) GetTestNet() []string {
	if m != nil {
		return m.TestNet
	}
	return nil
}

func (m *SolverParameter) GetTrainNetParam() *NetParameter {
	if m != nil {
		return m.TrainNetParam
	}
	return nil
}

func (m *SolverParameter) GetTestNetParam() []*NetParameter {
	if m != nil {
		return m.TestNetParam
	}
	return nil
}

func (m *SolverParameter) GetTrainState() *NetState {
	if m != nil {
		return m.TrainState
	}
	return nil
}

func (m *SolverParameter) GetTestState() []*NetState {
	if m != nil {
		return m.TestState
	}
	return nil
}

func (m *SolverParameter) GetTestIter() []int32 {
	if m != nil {
		return m.TestIter
	}
	return nil
}

func (m *SolverParameter) GetTestInterval() int32 {
	if m != nil && m.TestInterval != nil {
		return *m.TestInterval
	}
	return Default_SolverParameter_TestInterval
}

func (m *SolverParameter) GetTestComputeLoss() bool {
	if m != nil && m.TestComputeLoss != nil {
		return *m.TestComputeLoss
	}
	return Default_SolverParameter_TestComputeLoss
}

func (m *SolverParameter) GetTestInitialization() bool {
	if m != nil && m.TestInitialization != nil {
		return *m.TestInitialization
	}
	return Default_SolverParameter_TestInitialization
}

func (m *SolverParameter) GetBaseLr() float32 {
	if m != nil && m.BaseLr != nil {
		return *m.BaseLr
	}
	return 0
}

func (m *SolverParameter) GetDisplay() int32 {
	if m != nil && m.Display != nil {
		return *m.Display
	}
	return 0
}

func (m *SolverParameter) GetMaxIter() int32 {
	if m != nil && m.MaxIter != nil {
		return *m.MaxIter
	}
	return 0
}

func (m *SolverParameter) GetLrPolicy() string {
	if m != nil && m.LrPolicy != nil {
		return *m.LrPolicy
	}
	return ""
}

func (m *SolverParameter) GetGamma() float32 {
	if m != nil && m.Gamma != nil {
		return *m.Gamma
	}
	return 0
}

func (m *SolverParameter) GetPower() float32 {
	if m != nil && m.Power != nil {
		return *m.Power
	}
	return 0
}

func (m *SolverParameter) GetMomentum() float32 {
	if m != nil && m.Momentum != nil {
		return *m.Momentum
	}
	return 0
}

func (m *SolverParameter) GetWeightDecay() float32 {
	if m != nil && m.WeightDecay != nil {
		return *m.WeightDecay
	}
	return 0
}

func (m *SolverParameter) GetRegularizationType() string {
	if m != nil && m.RegularizationType != nil {
		return *m.RegularizationType
	}
	return Default_SolverParameter_RegularizationType
}

func (m *SolverParameter) GetStepsize() int32 {
	if m != nil && m.Stepsize != nil {
		return *m.Stepsize
	}
	return 0
}

func (m *SolverParameter) GetSnapshot() int32 {
	if m != nil && m.Snapshot != nil {
		return *m.Snapshot
	}
	return Default_SolverParameter_Snapshot
}

func (m *SolverParameter) GetSnapshotPrefix() string {
	if m != nil && m.SnapshotPrefix != nil {
		return *m.SnapshotPrefix
	}
	return ""
}

func (m *SolverParameter) GetSnapshotDiff() bool {
	if m != nil && m.SnapshotDiff != nil {
		return *m.SnapshotDiff
	}
	return Default_SolverParameter_SnapshotDiff
}

func (m *SolverParameter) GetSolverMode() SolverParameter_SolverMode {
	if m != nil && m.SolverMode != nil {
		return *m.SolverMode
	}
	return Default_SolverParameter_SolverMode
}

func (m *SolverParameter) GetDeviceId() int32 {
	if m != nil && m.DeviceId != nil {
		return *m.DeviceId
	}
	return Default_SolverParameter_DeviceId
}

func (m *SolverParameter) GetRandomSeed() int64 {
	if m != nil && m.RandomSeed != nil {
		return *m.RandomSeed
	}
	return Default_SolverParameter_RandomSeed
}

func (m *SolverParameter) GetSolverType() SolverParameter_SolverType {
	if m != nil && m.SolverType != nil {
		return *m.SolverType
	}
	return Default_SolverParameter_SolverType
}

func (m *SolverParameter) GetDelta() float32 {
	if m != nil && m.Delta != nil {
		return *m.Delta
	}
	return Default_SolverParameter_Delta
}

func (m *SolverParameter) GetDebugInfo() bool {
	if m != nil && m.DebugInfo != nil {
		return *m.DebugInfo
	}
	return Default_SolverParameter_DebugInfo
}

func (m *SolverParameter) GetSnapshotAfterTrain() bool {
	if m != nil && m.SnapshotAfterTrain != nil {
		return *m.SnapshotAfterTrain
	}
	return Default_SolverParameter_SnapshotAfterTrain
}

type SolverState struct {
	Iter             *int32       `protobuf:"varint,1,opt,name=iter" json:"iter,omitempty"`
	LearnedNet       *string      `protobuf:"bytes,2,opt,name=learned_net" json:"learned_net,omitempty"`
	History          []*BlobProto `protobuf:"bytes,3,rep,name=history" json:"history,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SolverState) Reset()         { *m = SolverState{} }
func (m *SolverState) String() string { return proto.CompactTextString(m) }
func (*SolverState) ProtoMessage()    {}

func (m *SolverState) GetIter() int32 {
	if m != nil && m.Iter != nil {
		return *m.Iter
	}
	return 0
}

func (m *SolverState) GetLearnedNet() string {
	if m != nil && m.LearnedNet != nil {
		return *m.LearnedNet
	}
	return ""
}

func (m *SolverState) GetHistory() []*BlobProto {
	if m != nil {
		return m.History
	}
	return nil
}

type NetState struct {
	Phase            *Phase   `protobuf:"varint,1,opt,name=phase,enum=caffe.Phase,def=1" json:"phase,omitempty"`
	Level            *int32   `protobuf:"varint,2,opt,name=level,def=0" json:"level,omitempty"`
	Stage            []string `protobuf:"bytes,3,rep,name=stage" json:"stage,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *NetState) Reset()         { *m = NetState{} }
func (m *NetState) String() string { return proto.CompactTextString(m) }
func (*NetState) ProtoMessage()    {}

const Default_NetState_Phase Phase = Phase_TEST
const Default_NetState_Level int32 = 0

func (m *NetState) GetPhase() Phase {
	if m != nil && m.Phase != nil {
		return *m.Phase
	}
	return Default_NetState_Phase
}

func (m *NetState) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return Default_NetState_Level
}

func (m *NetState) GetStage() []string {
	if m != nil {
		return m.Stage
	}
	return nil
}

type NetStateRule struct {
	Phase            *Phase   `protobuf:"varint,1,opt,name=phase,enum=caffe.Phase" json:"phase,omitempty"`
	MinLevel         *int32   `protobuf:"varint,2,opt,name=min_level" json:"min_level,omitempty"`
	MaxLevel         *int32   `protobuf:"varint,3,opt,name=max_level" json:"max_level,omitempty"`
	Stage            []string `protobuf:"bytes,4,rep,name=stage" json:"stage,omitempty"`
	NotStage         []string `protobuf:"bytes,5,rep,name=not_stage" json:"not_stage,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *NetStateRule) Reset()         { *m = NetStateRule{} }
func (m *NetStateRule) String() string { return proto.CompactTextString(m) }
func (*NetStateRule) ProtoMessage()    {}

func (m *NetStateRule) GetPhase() Phase {
	if m != nil && m.Phase != nil {
		return *m.Phase
	}
	return Phase_TRAIN
}

func (m *NetStateRule) GetMinLevel() int32 {
	if m != nil && m.MinLevel != nil {
		return *m.MinLevel
	}
	return 0
}

func (m *NetStateRule) GetMaxLevel() int32 {
	if m != nil && m.MaxLevel != nil {
		return *m.MaxLevel
	}
	return 0
}

func (m *NetStateRule) GetStage() []string {
	if m != nil {
		return m.Stage
	}
	return nil
}

func (m *NetStateRule) GetNotStage() []string {
	if m != nil {
		return m.NotStage
	}
	return nil
}

type LayerParameter struct {
	Bottom               []string                      `protobuf:"bytes,2,rep,name=bottom" json:"bottom,omitempty"`
	Top                  []string                      `protobuf:"bytes,3,rep,name=top" json:"top,omitempty"`
	Name                 *string                       `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Include              []*NetStateRule               `protobuf:"bytes,32,rep,name=include" json:"include,omitempty"`
	Exclude              []*NetStateRule               `protobuf:"bytes,33,rep,name=exclude" json:"exclude,omitempty"`
	Type                 *LayerParameter_LayerType     `protobuf:"varint,5,opt,name=type,enum=caffe.LayerParameter_LayerType" json:"type,omitempty"`
	Blobs                []*BlobProto                  `protobuf:"bytes,6,rep,name=blobs" json:"blobs,omitempty"`
	Param                []string                      `protobuf:"bytes,1001,rep,name=param" json:"param,omitempty"`
	BlobShareMode        []LayerParameter_DimCheckMode `protobuf:"varint,1002,rep,name=blob_share_mode,enum=caffe.LayerParameter_DimCheckMode" json:"blob_share_mode,omitempty"`
	BlobsLr              []float32                     `protobuf:"fixed32,7,rep,name=blobs_lr" json:"blobs_lr,omitempty"`
	WeightDecay          []float32                     `protobuf:"fixed32,8,rep,name=weight_decay" json:"weight_decay,omitempty"`
	LossWeight           []float32                     `protobuf:"fixed32,35,rep,name=loss_weight" json:"loss_weight,omitempty"`
	AccuracyParam        *AccuracyParameter            `protobuf:"bytes,27,opt,name=accuracy_param" json:"accuracy_param,omitempty"`
	ArgmaxParam          *ArgMaxParameter              `protobuf:"bytes,23,opt,name=argmax_param" json:"argmax_param,omitempty"`
	ConcatParam          *ConcatParameter              `protobuf:"bytes,9,opt,name=concat_param" json:"concat_param,omitempty"`
	ContrastiveLossParam *ContrastiveLossParameter     `protobuf:"bytes,40,opt,name=contrastive_loss_param" json:"contrastive_loss_param,omitempty"`
	ConvolutionParam     *ConvolutionParameter         `protobuf:"bytes,10,opt,name=convolution_param" json:"convolution_param,omitempty"`
	DataParam            *DataParameter                `protobuf:"bytes,11,opt,name=data_param" json:"data_param,omitempty"`
	DropoutParam         *DropoutParameter             `protobuf:"bytes,12,opt,name=dropout_param" json:"dropout_param,omitempty"`
	DummyDataParam       *DummyDataParameter           `protobuf:"bytes,26,opt,name=dummy_data_param" json:"dummy_data_param,omitempty"`
	EltwiseParam         *EltwiseParameter             `protobuf:"bytes,24,opt,name=eltwise_param" json:"eltwise_param,omitempty"`
	Hdf5DataParam        *HDF5DataParameter            `protobuf:"bytes,13,opt,name=hdf5_data_param" json:"hdf5_data_param,omitempty"`
	Hdf5OutputParam      *HDF5OutputParameter          `protobuf:"bytes,14,opt,name=hdf5_output_param" json:"hdf5_output_param,omitempty"`
	HingeLossParam       *HingeLossParameter           `protobuf:"bytes,29,opt,name=hinge_loss_param" json:"hinge_loss_param,omitempty"`
	ImageDataParam       *ImageDataParameter           `protobuf:"bytes,15,opt,name=image_data_param" json:"image_data_param,omitempty"`
	InfogainLossParam    *InfogainLossParameter        `protobuf:"bytes,16,opt,name=infogain_loss_param" json:"infogain_loss_param,omitempty"`
	InnerProductParam    *InnerProductParameter        `protobuf:"bytes,17,opt,name=inner_product_param" json:"inner_product_param,omitempty"`
	LrnParam             *LRNParameter                 `protobuf:"bytes,18,opt,name=lrn_param" json:"lrn_param,omitempty"`
	MemoryDataParam      *MemoryDataParameter          `protobuf:"bytes,22,opt,name=memory_data_param" json:"memory_data_param,omitempty"`
	MvnParam             *MVNParameter                 `protobuf:"bytes,34,opt,name=mvn_param" json:"mvn_param,omitempty"`
	PoolingParam         *PoolingParameter             `protobuf:"bytes,19,opt,name=pooling_param" json:"pooling_param,omitempty"`
	PowerParam           *PowerParameter               `protobuf:"bytes,21,opt,name=power_param" json:"power_param,omitempty"`
	ReluParam            *ReLUParameter                `protobuf:"bytes,30,opt,name=relu_param" json:"relu_param,omitempty"`
	SigmoidParam         *SigmoidParameter             `protobuf:"bytes,38,opt,name=sigmoid_param" json:"sigmoid_param,omitempty"`
	SoftmaxParam         *SoftmaxParameter             `protobuf:"bytes,39,opt,name=softmax_param" json:"softmax_param,omitempty"`
	SliceParam           *SliceParameter               `protobuf:"bytes,31,opt,name=slice_param" json:"slice_param,omitempty"`
	TanhParam            *TanHParameter                `protobuf:"bytes,37,opt,name=tanh_param" json:"tanh_param,omitempty"`
	ThresholdParam       *ThresholdParameter           `protobuf:"bytes,25,opt,name=threshold_param" json:"threshold_param,omitempty"`
	WindowDataParam      *WindowDataParameter          `protobuf:"bytes,20,opt,name=window_data_param" json:"window_data_param,omitempty"`
	TransformParam       *TransformationParameter      `protobuf:"bytes,36,opt,name=transform_param" json:"transform_param,omitempty"`
	Layer                *V0LayerParameter             `protobuf:"bytes,1,opt,name=layer" json:"layer,omitempty"`
	XXX_unrecognized     []byte                        `json:"-"`
}

func (m *LayerParameter) Reset()         { *m = LayerParameter{} }
func (m *LayerParameter) String() string { return proto.CompactTextString(m) }
func (*LayerParameter) ProtoMessage()    {}

func (m *LayerParameter) GetBottom() []string {
	if m != nil {
		return m.Bottom
	}
	return nil
}

func (m *LayerParameter) GetTop() []string {
	if m != nil {
		return m.Top
	}
	return nil
}

func (m *LayerParameter) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *LayerParameter) GetInclude() []*NetStateRule {
	if m != nil {
		return m.Include
	}
	return nil
}

func (m *LayerParameter) GetExclude() []*NetStateRule {
	if m != nil {
		return m.Exclude
	}
	return nil
}

func (m *LayerParameter) GetType() LayerParameter_LayerType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return LayerParameter_NONE
}

func (m *LayerParameter) GetBlobs() []*BlobProto {
	if m != nil {
		return m.Blobs
	}
	return nil
}

func (m *LayerParameter) GetParam() []string {
	if m != nil {
		return m.Param
	}
	return nil
}

func (m *LayerParameter) GetBlobShareMode() []LayerParameter_DimCheckMode {
	if m != nil {
		return m.BlobShareMode
	}
	return nil
}

func (m *LayerParameter) GetBlobsLr() []float32 {
	if m != nil {
		return m.BlobsLr
	}
	return nil
}

func (m *LayerParameter) GetWeightDecay() []float32 {
	if m != nil {
		return m.WeightDecay
	}
	return nil
}

func (m *LayerParameter) GetLossWeight() []float32 {
	if m != nil {
		return m.LossWeight
	}
	return nil
}

func (m *LayerParameter) GetAccuracyParam() *AccuracyParameter {
	if m != nil {
		return m.AccuracyParam
	}
	return nil
}

func (m *LayerParameter) GetArgmaxParam() *ArgMaxParameter {
	if m != nil {
		return m.ArgmaxParam
	}
	return nil
}

func (m *LayerParameter) GetConcatParam() *ConcatParameter {
	if m != nil {
		return m.ConcatParam
	}
	return nil
}

func (m *LayerParameter) GetContrastiveLossParam() *ContrastiveLossParameter {
	if m != nil {
		return m.ContrastiveLossParam
	}
	return nil
}

func (m *LayerParameter) GetConvolutionParam() *ConvolutionParameter {
	if m != nil {
		return m.ConvolutionParam
	}
	return nil
}

func (m *LayerParameter) GetDataParam() *DataParameter {
	if m != nil {
		return m.DataParam
	}
	return nil
}

func (m *LayerParameter) GetDropoutParam() *DropoutParameter {
	if m != nil {
		return m.DropoutParam
	}
	return nil
}

func (m *LayerParameter) GetDummyDataParam() *DummyDataParameter {
	if m != nil {
		return m.DummyDataParam
	}
	return nil
}

func (m *LayerParameter) GetEltwiseParam() *EltwiseParameter {
	if m != nil {
		return m.EltwiseParam
	}
	return nil
}

func (m *LayerParameter) GetHdf5DataParam() *HDF5DataParameter {
	if m != nil {
		return m.Hdf5DataParam
	}
	return nil
}

func (m *LayerParameter) GetHdf5OutputParam() *HDF5OutputParameter {
	if m != nil {
		return m.Hdf5OutputParam
	}
	return nil
}

func (m *LayerParameter) GetHingeLossParam() *HingeLossParameter {
	if m != nil {
		return m.HingeLossParam
	}
	return nil
}

func (m *LayerParameter) GetImageDataParam() *ImageDataParameter {
	if m != nil {
		return m.ImageDataParam
	}
	return nil
}

func (m *LayerParameter) GetInfogainLossParam() *InfogainLossParameter {
	if m != nil {
		return m.InfogainLossParam
	}
	return nil
}

func (m *LayerParameter) GetInnerProductParam() *InnerProductParameter {
	if m != nil {
		return m.InnerProductParam
	}
	return nil
}

func (m *LayerParameter) GetLrnParam() *LRNParameter {
	if m != nil {
		return m.LrnParam
	}
	return nil
}

func (m *LayerParameter) GetMemoryDataParam() *MemoryDataParameter {
	if m != nil {
		return m.MemoryDataParam
	}
	return nil
}

func (m *LayerParameter) GetMvnParam() *MVNParameter {
	if m != nil {
		return m.MvnParam
	}
	return nil
}

func (m *LayerParameter) GetPoolingParam() *PoolingParameter {
	if m != nil {
		return m.PoolingParam
	}
	return nil
}

func (m *LayerParameter) GetPowerParam() *PowerParameter {
	if m != nil {
		return m.PowerParam
	}
	return nil
}

func (m *LayerParameter) GetReluParam() *ReLUParameter {
	if m != nil {
		return m.ReluParam
	}
	return nil
}

func (m *LayerParameter) GetSigmoidParam() *SigmoidParameter {
	if m != nil {
		return m.SigmoidParam
	}
	return nil
}

func (m *LayerParameter) GetSoftmaxParam() *SoftmaxParameter {
	if m != nil {
		return m.SoftmaxParam
	}
	return nil
}

func (m *LayerParameter) GetSliceParam() *SliceParameter {
	if m != nil {
		return m.SliceParam
	}
	return nil
}

func (m *LayerParameter) GetTanhParam() *TanHParameter {
	if m != nil {
		return m.TanhParam
	}
	return nil
}

func (m *LayerParameter) GetThresholdParam() *ThresholdParameter {
	if m != nil {
		return m.ThresholdParam
	}
	return nil
}

func (m *LayerParameter) GetWindowDataParam() *WindowDataParameter {
	if m != nil {
		return m.WindowDataParam
	}
	return nil
}

func (m *LayerParameter) GetTransformParam() *TransformationParameter {
	if m != nil {
		return m.TransformParam
	}
	return nil
}

func (m *LayerParameter) GetLayer() *V0LayerParameter {
	if m != nil {
		return m.Layer
	}
	return nil
}

type TransformationParameter struct {
	Scale            *float32 `protobuf:"fixed32,1,opt,name=scale,def=1" json:"scale,omitempty"`
	Mirror           *bool    `protobuf:"varint,2,opt,name=mirror,def=0" json:"mirror,omitempty"`
	CropSize         *uint32  `protobuf:"varint,3,opt,name=crop_size,def=0" json:"crop_size,omitempty"`
	MeanFile         *string  `protobuf:"bytes,4,opt,name=mean_file" json:"mean_file,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *TransformationParameter) Reset()         { *m = TransformationParameter{} }
func (m *TransformationParameter) String() string { return proto.CompactTextString(m) }
func (*TransformationParameter) ProtoMessage()    {}

const Default_TransformationParameter_Scale float32 = 1
const Default_TransformationParameter_Mirror bool = false
const Default_TransformationParameter_CropSize uint32 = 0

func (m *TransformationParameter) GetScale() float32 {
	if m != nil && m.Scale != nil {
		return *m.Scale
	}
	return Default_TransformationParameter_Scale
}

func (m *TransformationParameter) GetMirror() bool {
	if m != nil && m.Mirror != nil {
		return *m.Mirror
	}
	return Default_TransformationParameter_Mirror
}

func (m *TransformationParameter) GetCropSize() uint32 {
	if m != nil && m.CropSize != nil {
		return *m.CropSize
	}
	return Default_TransformationParameter_CropSize
}

func (m *TransformationParameter) GetMeanFile() string {
	if m != nil && m.MeanFile != nil {
		return *m.MeanFile
	}
	return ""
}

type AccuracyParameter struct {
	TopK             *uint32 `protobuf:"varint,1,opt,name=top_k,def=1" json:"top_k,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AccuracyParameter) Reset()         { *m = AccuracyParameter{} }
func (m *AccuracyParameter) String() string { return proto.CompactTextString(m) }
func (*AccuracyParameter) ProtoMessage()    {}

const Default_AccuracyParameter_TopK uint32 = 1

func (m *AccuracyParameter) GetTopK() uint32 {
	if m != nil && m.TopK != nil {
		return *m.TopK
	}
	return Default_AccuracyParameter_TopK
}

type ArgMaxParameter struct {
	OutMaxVal        *bool   `protobuf:"varint,1,opt,name=out_max_val,def=0" json:"out_max_val,omitempty"`
	TopK             *uint32 `protobuf:"varint,2,opt,name=top_k,def=1" json:"top_k,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ArgMaxParameter) Reset()         { *m = ArgMaxParameter{} }
func (m *ArgMaxParameter) String() string { return proto.CompactTextString(m) }
func (*ArgMaxParameter) ProtoMessage()    {}

const Default_ArgMaxParameter_OutMaxVal bool = false
const Default_ArgMaxParameter_TopK uint32 = 1

func (m *ArgMaxParameter) GetOutMaxVal() bool {
	if m != nil && m.OutMaxVal != nil {
		return *m.OutMaxVal
	}
	return Default_ArgMaxParameter_OutMaxVal
}

func (m *ArgMaxParameter) GetTopK() uint32 {
	if m != nil && m.TopK != nil {
		return *m.TopK
	}
	return Default_ArgMaxParameter_TopK
}

type ConcatParameter struct {
	ConcatDim        *uint32 `protobuf:"varint,1,opt,name=concat_dim,def=1" json:"concat_dim,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ConcatParameter) Reset()         { *m = ConcatParameter{} }
func (m *ConcatParameter) String() string { return proto.CompactTextString(m) }
func (*ConcatParameter) ProtoMessage()    {}

const Default_ConcatParameter_ConcatDim uint32 = 1

func (m *ConcatParameter) GetConcatDim() uint32 {
	if m != nil && m.ConcatDim != nil {
		return *m.ConcatDim
	}
	return Default_ConcatParameter_ConcatDim
}

type ContrastiveLossParameter struct {
	Margin           *float32 `protobuf:"fixed32,1,opt,name=margin,def=1" json:"margin,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ContrastiveLossParameter) Reset()         { *m = ContrastiveLossParameter{} }
func (m *ContrastiveLossParameter) String() string { return proto.CompactTextString(m) }
func (*ContrastiveLossParameter) ProtoMessage()    {}

const Default_ContrastiveLossParameter_Margin float32 = 1

func (m *ContrastiveLossParameter) GetMargin() float32 {
	if m != nil && m.Margin != nil {
		return *m.Margin
	}
	return Default_ContrastiveLossParameter_Margin
}

type ConvolutionParameter struct {
	NumOutput        *uint32                      `protobuf:"varint,1,opt,name=num_output" json:"num_output,omitempty"`
	BiasTerm         *bool                        `protobuf:"varint,2,opt,name=bias_term,def=1" json:"bias_term,omitempty"`
	Pad              *uint32                      `protobuf:"varint,3,opt,name=pad,def=0" json:"pad,omitempty"`
	PadH             *uint32                      `protobuf:"varint,9,opt,name=pad_h,def=0" json:"pad_h,omitempty"`
	PadW             *uint32                      `protobuf:"varint,10,opt,name=pad_w,def=0" json:"pad_w,omitempty"`
	KernelSize       *uint32                      `protobuf:"varint,4,opt,name=kernel_size" json:"kernel_size,omitempty"`
	KernelH          *uint32                      `protobuf:"varint,11,opt,name=kernel_h" json:"kernel_h,omitempty"`
	KernelW          *uint32                      `protobuf:"varint,12,opt,name=kernel_w" json:"kernel_w,omitempty"`
	Group            *uint32                      `protobuf:"varint,5,opt,name=group,def=1" json:"group,omitempty"`
	Stride           *uint32                      `protobuf:"varint,6,opt,name=stride,def=1" json:"stride,omitempty"`
	StrideH          *uint32                      `protobuf:"varint,13,opt,name=stride_h" json:"stride_h,omitempty"`
	StrideW          *uint32                      `protobuf:"varint,14,opt,name=stride_w" json:"stride_w,omitempty"`
	WeightFiller     *FillerParameter             `protobuf:"bytes,7,opt,name=weight_filler" json:"weight_filler,omitempty"`
	BiasFiller       *FillerParameter             `protobuf:"bytes,8,opt,name=bias_filler" json:"bias_filler,omitempty"`
	Engine           *ConvolutionParameter_Engine `protobuf:"varint,15,opt,name=engine,enum=caffe.ConvolutionParameter_Engine,def=0" json:"engine,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *ConvolutionParameter) Reset()         { *m = ConvolutionParameter{} }
func (m *ConvolutionParameter) String() string { return proto.CompactTextString(m) }
func (*ConvolutionParameter) ProtoMessage()    {}

const Default_ConvolutionParameter_BiasTerm bool = true
const Default_ConvolutionParameter_Pad uint32 = 0
const Default_ConvolutionParameter_PadH uint32 = 0
const Default_ConvolutionParameter_PadW uint32 = 0
const Default_ConvolutionParameter_Group uint32 = 1
const Default_ConvolutionParameter_Stride uint32 = 1
const Default_ConvolutionParameter_Engine ConvolutionParameter_Engine = ConvolutionParameter_DEFAULT

func (m *ConvolutionParameter) GetNumOutput() uint32 {
	if m != nil && m.NumOutput != nil {
		return *m.NumOutput
	}
	return 0
}

func (m *ConvolutionParameter) GetBiasTerm() bool {
	if m != nil && m.BiasTerm != nil {
		return *m.BiasTerm
	}
	return Default_ConvolutionParameter_BiasTerm
}

func (m *ConvolutionParameter) GetPad() uint32 {
	if m != nil && m.Pad != nil {
		return *m.Pad
	}
	return Default_ConvolutionParameter_Pad
}

func (m *ConvolutionParameter) GetPadH() uint32 {
	if m != nil && m.PadH != nil {
		return *m.PadH
	}
	return Default_ConvolutionParameter_PadH
}

func (m *ConvolutionParameter) GetPadW() uint32 {
	if m != nil && m.PadW != nil {
		return *m.PadW
	}
	return Default_ConvolutionParameter_PadW
}

func (m *ConvolutionParameter) GetKernelSize() uint32 {
	if m != nil && m.KernelSize != nil {
		return *m.KernelSize
	}
	return 0
}

func (m *ConvolutionParameter) GetKernelH() uint32 {
	if m != nil && m.KernelH != nil {
		return *m.KernelH
	}
	return 0
}

func (m *ConvolutionParameter) GetKernelW() uint32 {
	if m != nil && m.KernelW != nil {
		return *m.KernelW
	}
	return 0
}

func (m *ConvolutionParameter) GetGroup() uint32 {
	if m != nil && m.Group != nil {
		return *m.Group
	}
	return Default_ConvolutionParameter_Group
}

func (m *ConvolutionParameter) GetStride() uint32 {
	if m != nil && m.Stride != nil {
		return *m.Stride
	}
	return Default_ConvolutionParameter_Stride
}

func (m *ConvolutionParameter) GetStrideH() uint32 {
	if m != nil && m.StrideH != nil {
		return *m.StrideH
	}
	return 0
}

func (m *ConvolutionParameter) GetStrideW() uint32 {
	if m != nil && m.StrideW != nil {
		return *m.StrideW
	}
	return 0
}

func (m *ConvolutionParameter) GetWeightFiller() *FillerParameter {
	if m != nil {
		return m.WeightFiller
	}
	return nil
}

func (m *ConvolutionParameter) GetBiasFiller() *FillerParameter {
	if m != nil {
		return m.BiasFiller
	}
	return nil
}

func (m *ConvolutionParameter) GetEngine() ConvolutionParameter_Engine {
	if m != nil && m.Engine != nil {
		return *m.Engine
	}
	return Default_ConvolutionParameter_Engine
}

type DataParameter struct {
	Source           *string           `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	BatchSize        *uint32           `protobuf:"varint,4,opt,name=batch_size" json:"batch_size,omitempty"`
	RandSkip         *uint32           `protobuf:"varint,7,opt,name=rand_skip,def=0" json:"rand_skip,omitempty"`
	Backend          *DataParameter_DB `protobuf:"varint,8,opt,name=backend,enum=caffe.DataParameter_DB,def=0" json:"backend,omitempty"`
	Scale            *float32          `protobuf:"fixed32,2,opt,name=scale,def=1" json:"scale,omitempty"`
	MeanFile         *string           `protobuf:"bytes,3,opt,name=mean_file" json:"mean_file,omitempty"`
	CropSize         *uint32           `protobuf:"varint,5,opt,name=crop_size,def=0" json:"crop_size,omitempty"`
	Mirror           *bool             `protobuf:"varint,6,opt,name=mirror,def=0" json:"mirror,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *DataParameter) Reset()         { *m = DataParameter{} }
func (m *DataParameter) String() string { return proto.CompactTextString(m) }
func (*DataParameter) ProtoMessage()    {}

const Default_DataParameter_RandSkip uint32 = 0
const Default_DataParameter_Backend DataParameter_DB = DataParameter_LEVELDB
const Default_DataParameter_Scale float32 = 1
const Default_DataParameter_CropSize uint32 = 0
const Default_DataParameter_Mirror bool = false

func (m *DataParameter) GetSource() string {
	if m != nil && m.Source != nil {
		return *m.Source
	}
	return ""
}

func (m *DataParameter) GetBatchSize() uint32 {
	if m != nil && m.BatchSize != nil {
		return *m.BatchSize
	}
	return 0
}

func (m *DataParameter) GetRandSkip() uint32 {
	if m != nil && m.RandSkip != nil {
		return *m.RandSkip
	}
	return Default_DataParameter_RandSkip
}

func (m *DataParameter) GetBackend() DataParameter_DB {
	if m != nil && m.Backend != nil {
		return *m.Backend
	}
	return Default_DataParameter_Backend
}

func (m *DataParameter) GetScale() float32 {
	if m != nil && m.Scale != nil {
		return *m.Scale
	}
	return Default_DataParameter_Scale
}

func (m *DataParameter) GetMeanFile() string {
	if m != nil && m.MeanFile != nil {
		return *m.MeanFile
	}
	return ""
}

func (m *DataParameter) GetCropSize() uint32 {
	if m != nil && m.CropSize != nil {
		return *m.CropSize
	}
	return Default_DataParameter_CropSize
}

func (m *DataParameter) GetMirror() bool {
	if m != nil && m.Mirror != nil {
		return *m.Mirror
	}
	return Default_DataParameter_Mirror
}

type DropoutParameter struct {
	DropoutRatio     *float32 `protobuf:"fixed32,1,opt,name=dropout_ratio,def=0.5" json:"dropout_ratio,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *DropoutParameter) Reset()         { *m = DropoutParameter{} }
func (m *DropoutParameter) String() string { return proto.CompactTextString(m) }
func (*DropoutParameter) ProtoMessage()    {}

const Default_DropoutParameter_DropoutRatio float32 = 0.5

func (m *DropoutParameter) GetDropoutRatio() float32 {
	if m != nil && m.DropoutRatio != nil {
		return *m.DropoutRatio
	}
	return Default_DropoutParameter_DropoutRatio
}

type DummyDataParameter struct {
	DataFiller       []*FillerParameter `protobuf:"bytes,1,rep,name=data_filler" json:"data_filler,omitempty"`
	Num              []uint32           `protobuf:"varint,2,rep,name=num" json:"num,omitempty"`
	Channels         []uint32           `protobuf:"varint,3,rep,name=channels" json:"channels,omitempty"`
	Height           []uint32           `protobuf:"varint,4,rep,name=height" json:"height,omitempty"`
	Width            []uint32           `protobuf:"varint,5,rep,name=width" json:"width,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *DummyDataParameter) Reset()         { *m = DummyDataParameter{} }
func (m *DummyDataParameter) String() string { return proto.CompactTextString(m) }
func (*DummyDataParameter) ProtoMessage()    {}

func (m *DummyDataParameter) GetDataFiller() []*FillerParameter {
	if m != nil {
		return m.DataFiller
	}
	return nil
}

func (m *DummyDataParameter) GetNum() []uint32 {
	if m != nil {
		return m.Num
	}
	return nil
}

func (m *DummyDataParameter) GetChannels() []uint32 {
	if m != nil {
		return m.Channels
	}
	return nil
}

func (m *DummyDataParameter) GetHeight() []uint32 {
	if m != nil {
		return m.Height
	}
	return nil
}

func (m *DummyDataParameter) GetWidth() []uint32 {
	if m != nil {
		return m.Width
	}
	return nil
}

type EltwiseParameter struct {
	Operation        *EltwiseParameter_EltwiseOp `protobuf:"varint,1,opt,name=operation,enum=caffe.EltwiseParameter_EltwiseOp,def=1" json:"operation,omitempty"`
	Coeff            []float32                   `protobuf:"fixed32,2,rep,name=coeff" json:"coeff,omitempty"`
	StableProdGrad   *bool                       `protobuf:"varint,3,opt,name=stable_prod_grad,def=1" json:"stable_prod_grad,omitempty"`
	XXX_unrecognized []byte                      `json:"-"`
}

func (m *EltwiseParameter) Reset()         { *m = EltwiseParameter{} }
func (m *EltwiseParameter) String() string { return proto.CompactTextString(m) }
func (*EltwiseParameter) ProtoMessage()    {}

const Default_EltwiseParameter_Operation EltwiseParameter_EltwiseOp = EltwiseParameter_SUM
const Default_EltwiseParameter_StableProdGrad bool = true

func (m *EltwiseParameter) GetOperation() EltwiseParameter_EltwiseOp {
	if m != nil && m.Operation != nil {
		return *m.Operation
	}
	return Default_EltwiseParameter_Operation
}

func (m *EltwiseParameter) GetCoeff() []float32 {
	if m != nil {
		return m.Coeff
	}
	return nil
}

func (m *EltwiseParameter) GetStableProdGrad() bool {
	if m != nil && m.StableProdGrad != nil {
		return *m.StableProdGrad
	}
	return Default_EltwiseParameter_StableProdGrad
}

type ThresholdParameter struct {
	Threshold        *float32 `protobuf:"fixed32,1,opt,name=threshold,def=0" json:"threshold,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ThresholdParameter) Reset()         { *m = ThresholdParameter{} }
func (m *ThresholdParameter) String() string { return proto.CompactTextString(m) }
func (*ThresholdParameter) ProtoMessage()    {}

const Default_ThresholdParameter_Threshold float32 = 0

func (m *ThresholdParameter) GetThreshold() float32 {
	if m != nil && m.Threshold != nil {
		return *m.Threshold
	}
	return Default_ThresholdParameter_Threshold
}

type HDF5DataParameter struct {
	Source           *string `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	BatchSize        *uint32 `protobuf:"varint,2,opt,name=batch_size" json:"batch_size,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *HDF5DataParameter) Reset()         { *m = HDF5DataParameter{} }
func (m *HDF5DataParameter) String() string { return proto.CompactTextString(m) }
func (*HDF5DataParameter) ProtoMessage()    {}

func (m *HDF5DataParameter) GetSource() string {
	if m != nil && m.Source != nil {
		return *m.Source
	}
	return ""
}

func (m *HDF5DataParameter) GetBatchSize() uint32 {
	if m != nil && m.BatchSize != nil {
		return *m.BatchSize
	}
	return 0
}

type HDF5OutputParameter struct {
	FileName         *string `protobuf:"bytes,1,opt,name=file_name" json:"file_name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *HDF5OutputParameter) Reset()         { *m = HDF5OutputParameter{} }
func (m *HDF5OutputParameter) String() string { return proto.CompactTextString(m) }
func (*HDF5OutputParameter) ProtoMessage()    {}

func (m *HDF5OutputParameter) GetFileName() string {
	if m != nil && m.FileName != nil {
		return *m.FileName
	}
	return ""
}

type HingeLossParameter struct {
	Norm             *HingeLossParameter_Norm `protobuf:"varint,1,opt,name=norm,enum=caffe.HingeLossParameter_Norm,def=1" json:"norm,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *HingeLossParameter) Reset()         { *m = HingeLossParameter{} }
func (m *HingeLossParameter) String() string { return proto.CompactTextString(m) }
func (*HingeLossParameter) ProtoMessage()    {}

const Default_HingeLossParameter_Norm HingeLossParameter_Norm = HingeLossParameter_L1

func (m *HingeLossParameter) GetNorm() HingeLossParameter_Norm {
	if m != nil && m.Norm != nil {
		return *m.Norm
	}
	return Default_HingeLossParameter_Norm
}

type ImageDataParameter struct {
	Source           *string  `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	BatchSize        *uint32  `protobuf:"varint,4,opt,name=batch_size" json:"batch_size,omitempty"`
	RandSkip         *uint32  `protobuf:"varint,7,opt,name=rand_skip,def=0" json:"rand_skip,omitempty"`
	Shuffle          *bool    `protobuf:"varint,8,opt,name=shuffle,def=0" json:"shuffle,omitempty"`
	NewHeight        *uint32  `protobuf:"varint,9,opt,name=new_height,def=0" json:"new_height,omitempty"`
	NewWidth         *uint32  `protobuf:"varint,10,opt,name=new_width,def=0" json:"new_width,omitempty"`
	Scale            *float32 `protobuf:"fixed32,2,opt,name=scale,def=1" json:"scale,omitempty"`
	MeanFile         *string  `protobuf:"bytes,3,opt,name=mean_file" json:"mean_file,omitempty"`
	CropSize         *uint32  `protobuf:"varint,5,opt,name=crop_size,def=0" json:"crop_size,omitempty"`
	Mirror           *bool    `protobuf:"varint,6,opt,name=mirror,def=0" json:"mirror,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ImageDataParameter) Reset()         { *m = ImageDataParameter{} }
func (m *ImageDataParameter) String() string { return proto.CompactTextString(m) }
func (*ImageDataParameter) ProtoMessage()    {}

const Default_ImageDataParameter_RandSkip uint32 = 0
const Default_ImageDataParameter_Shuffle bool = false
const Default_ImageDataParameter_NewHeight uint32 = 0
const Default_ImageDataParameter_NewWidth uint32 = 0
const Default_ImageDataParameter_Scale float32 = 1
const Default_ImageDataParameter_CropSize uint32 = 0
const Default_ImageDataParameter_Mirror bool = false

func (m *ImageDataParameter) GetSource() string {
	if m != nil && m.Source != nil {
		return *m.Source
	}
	return ""
}

func (m *ImageDataParameter) GetBatchSize() uint32 {
	if m != nil && m.BatchSize != nil {
		return *m.BatchSize
	}
	return 0
}

func (m *ImageDataParameter) GetRandSkip() uint32 {
	if m != nil && m.RandSkip != nil {
		return *m.RandSkip
	}
	return Default_ImageDataParameter_RandSkip
}

func (m *ImageDataParameter) GetShuffle() bool {
	if m != nil && m.Shuffle != nil {
		return *m.Shuffle
	}
	return Default_ImageDataParameter_Shuffle
}

func (m *ImageDataParameter) GetNewHeight() uint32 {
	if m != nil && m.NewHeight != nil {
		return *m.NewHeight
	}
	return Default_ImageDataParameter_NewHeight
}

func (m *ImageDataParameter) GetNewWidth() uint32 {
	if m != nil && m.NewWidth != nil {
		return *m.NewWidth
	}
	return Default_ImageDataParameter_NewWidth
}

func (m *ImageDataParameter) GetScale() float32 {
	if m != nil && m.Scale != nil {
		return *m.Scale
	}
	return Default_ImageDataParameter_Scale
}

func (m *ImageDataParameter) GetMeanFile() string {
	if m != nil && m.MeanFile != nil {
		return *m.MeanFile
	}
	return ""
}

func (m *ImageDataParameter) GetCropSize() uint32 {
	if m != nil && m.CropSize != nil {
		return *m.CropSize
	}
	return Default_ImageDataParameter_CropSize
}

func (m *ImageDataParameter) GetMirror() bool {
	if m != nil && m.Mirror != nil {
		return *m.Mirror
	}
	return Default_ImageDataParameter_Mirror
}

type InfogainLossParameter struct {
	Source           *string `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *InfogainLossParameter) Reset()         { *m = InfogainLossParameter{} }
func (m *InfogainLossParameter) String() string { return proto.CompactTextString(m) }
func (*InfogainLossParameter) ProtoMessage()    {}

func (m *InfogainLossParameter) GetSource() string {
	if m != nil && m.Source != nil {
		return *m.Source
	}
	return ""
}

type InnerProductParameter struct {
	NumOutput        *uint32          `protobuf:"varint,1,opt,name=num_output" json:"num_output,omitempty"`
	BiasTerm         *bool            `protobuf:"varint,2,opt,name=bias_term,def=1" json:"bias_term,omitempty"`
	WeightFiller     *FillerParameter `protobuf:"bytes,3,opt,name=weight_filler" json:"weight_filler,omitempty"`
	BiasFiller       *FillerParameter `protobuf:"bytes,4,opt,name=bias_filler" json:"bias_filler,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *InnerProductParameter) Reset()         { *m = InnerProductParameter{} }
func (m *InnerProductParameter) String() string { return proto.CompactTextString(m) }
func (*InnerProductParameter) ProtoMessage()    {}

const Default_InnerProductParameter_BiasTerm bool = true

func (m *InnerProductParameter) GetNumOutput() uint32 {
	if m != nil && m.NumOutput != nil {
		return *m.NumOutput
	}
	return 0
}

func (m *InnerProductParameter) GetBiasTerm() bool {
	if m != nil && m.BiasTerm != nil {
		return *m.BiasTerm
	}
	return Default_InnerProductParameter_BiasTerm
}

func (m *InnerProductParameter) GetWeightFiller() *FillerParameter {
	if m != nil {
		return m.WeightFiller
	}
	return nil
}

func (m *InnerProductParameter) GetBiasFiller() *FillerParameter {
	if m != nil {
		return m.BiasFiller
	}
	return nil
}

type LRNParameter struct {
	LocalSize        *uint32                  `protobuf:"varint,1,opt,name=local_size,def=5" json:"local_size,omitempty"`
	Alpha            *float32                 `protobuf:"fixed32,2,opt,name=alpha,def=1" json:"alpha,omitempty"`
	Beta             *float32                 `protobuf:"fixed32,3,opt,name=beta,def=0.75" json:"beta,omitempty"`
	NormRegion       *LRNParameter_NormRegion `protobuf:"varint,4,opt,name=norm_region,enum=caffe.LRNParameter_NormRegion,def=0" json:"norm_region,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *LRNParameter) Reset()         { *m = LRNParameter{} }
func (m *LRNParameter) String() string { return proto.CompactTextString(m) }
func (*LRNParameter) ProtoMessage()    {}

const Default_LRNParameter_LocalSize uint32 = 5
const Default_LRNParameter_Alpha float32 = 1
const Default_LRNParameter_Beta float32 = 0.75
const Default_LRNParameter_NormRegion LRNParameter_NormRegion = LRNParameter_ACROSS_CHANNELS

func (m *LRNParameter) GetLocalSize() uint32 {
	if m != nil && m.LocalSize != nil {
		return *m.LocalSize
	}
	return Default_LRNParameter_LocalSize
}

func (m *LRNParameter) GetAlpha() float32 {
	if m != nil && m.Alpha != nil {
		return *m.Alpha
	}
	return Default_LRNParameter_Alpha
}

func (m *LRNParameter) GetBeta() float32 {
	if m != nil && m.Beta != nil {
		return *m.Beta
	}
	return Default_LRNParameter_Beta
}

func (m *LRNParameter) GetNormRegion() LRNParameter_NormRegion {
	if m != nil && m.NormRegion != nil {
		return *m.NormRegion
	}
	return Default_LRNParameter_NormRegion
}

type MemoryDataParameter struct {
	BatchSize        *uint32 `protobuf:"varint,1,opt,name=batch_size" json:"batch_size,omitempty"`
	Channels         *uint32 `protobuf:"varint,2,opt,name=channels" json:"channels,omitempty"`
	Height           *uint32 `protobuf:"varint,3,opt,name=height" json:"height,omitempty"`
	Width            *uint32 `protobuf:"varint,4,opt,name=width" json:"width,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MemoryDataParameter) Reset()         { *m = MemoryDataParameter{} }
func (m *MemoryDataParameter) String() string { return proto.CompactTextString(m) }
func (*MemoryDataParameter) ProtoMessage()    {}

func (m *MemoryDataParameter) GetBatchSize() uint32 {
	if m != nil && m.BatchSize != nil {
		return *m.BatchSize
	}
	return 0
}

func (m *MemoryDataParameter) GetChannels() uint32 {
	if m != nil && m.Channels != nil {
		return *m.Channels
	}
	return 0
}

func (m *MemoryDataParameter) GetHeight() uint32 {
	if m != nil && m.Height != nil {
		return *m.Height
	}
	return 0
}

func (m *MemoryDataParameter) GetWidth() uint32 {
	if m != nil && m.Width != nil {
		return *m.Width
	}
	return 0
}

type MVNParameter struct {
	NormalizeVariance *bool  `protobuf:"varint,1,opt,name=normalize_variance,def=1" json:"normalize_variance,omitempty"`
	AcrossChannels    *bool  `protobuf:"varint,2,opt,name=across_channels,def=0" json:"across_channels,omitempty"`
	XXX_unrecognized  []byte `json:"-"`
}

func (m *MVNParameter) Reset()         { *m = MVNParameter{} }
func (m *MVNParameter) String() string { return proto.CompactTextString(m) }
func (*MVNParameter) ProtoMessage()    {}

const Default_MVNParameter_NormalizeVariance bool = true
const Default_MVNParameter_AcrossChannels bool = false

func (m *MVNParameter) GetNormalizeVariance() bool {
	if m != nil && m.NormalizeVariance != nil {
		return *m.NormalizeVariance
	}
	return Default_MVNParameter_NormalizeVariance
}

func (m *MVNParameter) GetAcrossChannels() bool {
	if m != nil && m.AcrossChannels != nil {
		return *m.AcrossChannels
	}
	return Default_MVNParameter_AcrossChannels
}

type PoolingParameter struct {
	Pool             *PoolingParameter_PoolMethod `protobuf:"varint,1,opt,name=pool,enum=caffe.PoolingParameter_PoolMethod,def=0" json:"pool,omitempty"`
	Pad              *uint32                      `protobuf:"varint,4,opt,name=pad,def=0" json:"pad,omitempty"`
	PadH             *uint32                      `protobuf:"varint,9,opt,name=pad_h,def=0" json:"pad_h,omitempty"`
	PadW             *uint32                      `protobuf:"varint,10,opt,name=pad_w,def=0" json:"pad_w,omitempty"`
	KernelSize       *uint32                      `protobuf:"varint,2,opt,name=kernel_size" json:"kernel_size,omitempty"`
	KernelH          *uint32                      `protobuf:"varint,5,opt,name=kernel_h" json:"kernel_h,omitempty"`
	KernelW          *uint32                      `protobuf:"varint,6,opt,name=kernel_w" json:"kernel_w,omitempty"`
	Stride           *uint32                      `protobuf:"varint,3,opt,name=stride,def=1" json:"stride,omitempty"`
	StrideH          *uint32                      `protobuf:"varint,7,opt,name=stride_h" json:"stride_h,omitempty"`
	StrideW          *uint32                      `protobuf:"varint,8,opt,name=stride_w" json:"stride_w,omitempty"`
	Engine           *PoolingParameter_Engine     `protobuf:"varint,11,opt,name=engine,enum=caffe.PoolingParameter_Engine,def=0" json:"engine,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *PoolingParameter) Reset()         { *m = PoolingParameter{} }
func (m *PoolingParameter) String() string { return proto.CompactTextString(m) }
func (*PoolingParameter) ProtoMessage()    {}

const Default_PoolingParameter_Pool PoolingParameter_PoolMethod = PoolingParameter_MAX
const Default_PoolingParameter_Pad uint32 = 0
const Default_PoolingParameter_PadH uint32 = 0
const Default_PoolingParameter_PadW uint32 = 0
const Default_PoolingParameter_Stride uint32 = 1
const Default_PoolingParameter_Engine PoolingParameter_Engine = PoolingParameter_DEFAULT

func (m *PoolingParameter) GetPool() PoolingParameter_PoolMethod {
	if m != nil && m.Pool != nil {
		return *m.Pool
	}
	return Default_PoolingParameter_Pool
}

func (m *PoolingParameter) GetPad() uint32 {
	if m != nil && m.Pad != nil {
		return *m.Pad
	}
	return Default_PoolingParameter_Pad
}

func (m *PoolingParameter) GetPadH() uint32 {
	if m != nil && m.PadH != nil {
		return *m.PadH
	}
	return Default_PoolingParameter_PadH
}

func (m *PoolingParameter) GetPadW() uint32 {
	if m != nil && m.PadW != nil {
		return *m.PadW
	}
	return Default_PoolingParameter_PadW
}

func (m *PoolingParameter) GetKernelSize() uint32 {
	if m != nil && m.KernelSize != nil {
		return *m.KernelSize
	}
	return 0
}

func (m *PoolingParameter) GetKernelH() uint32 {
	if m != nil && m.KernelH != nil {
		return *m.KernelH
	}
	return 0
}

func (m *PoolingParameter) GetKernelW() uint32 {
	if m != nil && m.KernelW != nil {
		return *m.KernelW
	}
	return 0
}

func (m *PoolingParameter) GetStride() uint32 {
	if m != nil && m.Stride != nil {
		return *m.Stride
	}
	return Default_PoolingParameter_Stride
}

func (m *PoolingParameter) GetStrideH() uint32 {
	if m != nil && m.StrideH != nil {
		return *m.StrideH
	}
	return 0
}

func (m *PoolingParameter) GetStrideW() uint32 {
	if m != nil && m.StrideW != nil {
		return *m.StrideW
	}
	return 0
}

func (m *PoolingParameter) GetEngine() PoolingParameter_Engine {
	if m != nil && m.Engine != nil {
		return *m.Engine
	}
	return Default_PoolingParameter_Engine
}

type PowerParameter struct {
	Power            *float32 `protobuf:"fixed32,1,opt,name=power,def=1" json:"power,omitempty"`
	Scale            *float32 `protobuf:"fixed32,2,opt,name=scale,def=1" json:"scale,omitempty"`
	Shift            *float32 `protobuf:"fixed32,3,opt,name=shift,def=0" json:"shift,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *PowerParameter) Reset()         { *m = PowerParameter{} }
func (m *PowerParameter) String() string { return proto.CompactTextString(m) }
func (*PowerParameter) ProtoMessage()    {}

const Default_PowerParameter_Power float32 = 1
const Default_PowerParameter_Scale float32 = 1
const Default_PowerParameter_Shift float32 = 0

func (m *PowerParameter) GetPower() float32 {
	if m != nil && m.Power != nil {
		return *m.Power
	}
	return Default_PowerParameter_Power
}

func (m *PowerParameter) GetScale() float32 {
	if m != nil && m.Scale != nil {
		return *m.Scale
	}
	return Default_PowerParameter_Scale
}

func (m *PowerParameter) GetShift() float32 {
	if m != nil && m.Shift != nil {
		return *m.Shift
	}
	return Default_PowerParameter_Shift
}

type ReLUParameter struct {
	NegativeSlope    *float32              `protobuf:"fixed32,1,opt,name=negative_slope,def=0" json:"negative_slope,omitempty"`
	Engine           *ReLUParameter_Engine `protobuf:"varint,2,opt,name=engine,enum=caffe.ReLUParameter_Engine,def=0" json:"engine,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *ReLUParameter) Reset()         { *m = ReLUParameter{} }
func (m *ReLUParameter) String() string { return proto.CompactTextString(m) }
func (*ReLUParameter) ProtoMessage()    {}

const Default_ReLUParameter_NegativeSlope float32 = 0
const Default_ReLUParameter_Engine ReLUParameter_Engine = ReLUParameter_DEFAULT

func (m *ReLUParameter) GetNegativeSlope() float32 {
	if m != nil && m.NegativeSlope != nil {
		return *m.NegativeSlope
	}
	return Default_ReLUParameter_NegativeSlope
}

func (m *ReLUParameter) GetEngine() ReLUParameter_Engine {
	if m != nil && m.Engine != nil {
		return *m.Engine
	}
	return Default_ReLUParameter_Engine
}

type SigmoidParameter struct {
	Engine           *SigmoidParameter_Engine `protobuf:"varint,1,opt,name=engine,enum=caffe.SigmoidParameter_Engine,def=0" json:"engine,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *SigmoidParameter) Reset()         { *m = SigmoidParameter{} }
func (m *SigmoidParameter) String() string { return proto.CompactTextString(m) }
func (*SigmoidParameter) ProtoMessage()    {}

const Default_SigmoidParameter_Engine SigmoidParameter_Engine = SigmoidParameter_DEFAULT

func (m *SigmoidParameter) GetEngine() SigmoidParameter_Engine {
	if m != nil && m.Engine != nil {
		return *m.Engine
	}
	return Default_SigmoidParameter_Engine
}

type SliceParameter struct {
	SliceDim         *uint32  `protobuf:"varint,1,opt,name=slice_dim,def=1" json:"slice_dim,omitempty"`
	SlicePoint       []uint32 `protobuf:"varint,2,rep,name=slice_point" json:"slice_point,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *SliceParameter) Reset()         { *m = SliceParameter{} }
func (m *SliceParameter) String() string { return proto.CompactTextString(m) }
func (*SliceParameter) ProtoMessage()    {}

const Default_SliceParameter_SliceDim uint32 = 1

func (m *SliceParameter) GetSliceDim() uint32 {
	if m != nil && m.SliceDim != nil {
		return *m.SliceDim
	}
	return Default_SliceParameter_SliceDim
}

func (m *SliceParameter) GetSlicePoint() []uint32 {
	if m != nil {
		return m.SlicePoint
	}
	return nil
}

type SoftmaxParameter struct {
	Engine           *SoftmaxParameter_Engine `protobuf:"varint,1,opt,name=engine,enum=caffe.SoftmaxParameter_Engine,def=0" json:"engine,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *SoftmaxParameter) Reset()         { *m = SoftmaxParameter{} }
func (m *SoftmaxParameter) String() string { return proto.CompactTextString(m) }
func (*SoftmaxParameter) ProtoMessage()    {}

const Default_SoftmaxParameter_Engine SoftmaxParameter_Engine = SoftmaxParameter_DEFAULT

func (m *SoftmaxParameter) GetEngine() SoftmaxParameter_Engine {
	if m != nil && m.Engine != nil {
		return *m.Engine
	}
	return Default_SoftmaxParameter_Engine
}

type TanHParameter struct {
	Engine           *TanHParameter_Engine `protobuf:"varint,1,opt,name=engine,enum=caffe.TanHParameter_Engine,def=0" json:"engine,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *TanHParameter) Reset()         { *m = TanHParameter{} }
func (m *TanHParameter) String() string { return proto.CompactTextString(m) }
func (*TanHParameter) ProtoMessage()    {}

const Default_TanHParameter_Engine TanHParameter_Engine = TanHParameter_DEFAULT

func (m *TanHParameter) GetEngine() TanHParameter_Engine {
	if m != nil && m.Engine != nil {
		return *m.Engine
	}
	return Default_TanHParameter_Engine
}

type WindowDataParameter struct {
	Source           *string  `protobuf:"bytes,1,opt,name=source" json:"source,omitempty"`
	Scale            *float32 `protobuf:"fixed32,2,opt,name=scale,def=1" json:"scale,omitempty"`
	MeanFile         *string  `protobuf:"bytes,3,opt,name=mean_file" json:"mean_file,omitempty"`
	BatchSize        *uint32  `protobuf:"varint,4,opt,name=batch_size" json:"batch_size,omitempty"`
	CropSize         *uint32  `protobuf:"varint,5,opt,name=crop_size,def=0" json:"crop_size,omitempty"`
	Mirror           *bool    `protobuf:"varint,6,opt,name=mirror,def=0" json:"mirror,omitempty"`
	FgThreshold      *float32 `protobuf:"fixed32,7,opt,name=fg_threshold,def=0.5" json:"fg_threshold,omitempty"`
	BgThreshold      *float32 `protobuf:"fixed32,8,opt,name=bg_threshold,def=0.5" json:"bg_threshold,omitempty"`
	FgFraction       *float32 `protobuf:"fixed32,9,opt,name=fg_fraction,def=0.25" json:"fg_fraction,omitempty"`
	ContextPad       *uint32  `protobuf:"varint,10,opt,name=context_pad,def=0" json:"context_pad,omitempty"`
	CropMode         *string  `protobuf:"bytes,11,opt,name=crop_mode,def=warp" json:"crop_mode,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *WindowDataParameter) Reset()         { *m = WindowDataParameter{} }
func (m *WindowDataParameter) String() string { return proto.CompactTextString(m) }
func (*WindowDataParameter) ProtoMessage()    {}

const Default_WindowDataParameter_Scale float32 = 1
const Default_WindowDataParameter_CropSize uint32 = 0
const Default_WindowDataParameter_Mirror bool = false
const Default_WindowDataParameter_FgThreshold float32 = 0.5
const Default_WindowDataParameter_BgThreshold float32 = 0.5
const Default_WindowDataParameter_FgFraction float32 = 0.25
const Default_WindowDataParameter_ContextPad uint32 = 0
const Default_WindowDataParameter_CropMode string = "warp"

func (m *WindowDataParameter) GetSource() string {
	if m != nil && m.Source != nil {
		return *m.Source
	}
	return ""
}

func (m *WindowDataParameter) GetScale() float32 {
	if m != nil && m.Scale != nil {
		return *m.Scale
	}
	return Default_WindowDataParameter_Scale
}

func (m *WindowDataParameter) GetMeanFile() string {
	if m != nil && m.MeanFile != nil {
		return *m.MeanFile
	}
	return ""
}

func (m *WindowDataParameter) GetBatchSize() uint32 {
	if m != nil && m.BatchSize != nil {
		return *m.BatchSize
	}
	return 0
}

func (m *WindowDataParameter) GetCropSize() uint32 {
	if m != nil && m.CropSize != nil {
		return *m.CropSize
	}
	return Default_WindowDataParameter_CropSize
}

func (m *WindowDataParameter) GetMirror() bool {
	if m != nil && m.Mirror != nil {
		return *m.Mirror
	}
	return Default_WindowDataParameter_Mirror
}

func (m *WindowDataParameter) GetFgThreshold() float32 {
	if m != nil && m.FgThreshold != nil {
		return *m.FgThreshold
	}
	return Default_WindowDataParameter_FgThreshold
}

func (m *WindowDataParameter) GetBgThreshold() float32 {
	if m != nil && m.BgThreshold != nil {
		return *m.BgThreshold
	}
	return Default_WindowDataParameter_BgThreshold
}

func (m *WindowDataParameter) GetFgFraction() float32 {
	if m != nil && m.FgFraction != nil {
		return *m.FgFraction
	}
	return Default_WindowDataParameter_FgFraction
}

func (m *WindowDataParameter) GetContextPad() uint32 {
	if m != nil && m.ContextPad != nil {
		return *m.ContextPad
	}
	return Default_WindowDataParameter_ContextPad
}

func (m *WindowDataParameter) GetCropMode() string {
	if m != nil && m.CropMode != nil {
		return *m.CropMode
	}
	return Default_WindowDataParameter_CropMode
}

type V0LayerParameter struct {
	Name             *string                      `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Type             *string                      `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	NumOutput        *uint32                      `protobuf:"varint,3,opt,name=num_output" json:"num_output,omitempty"`
	Biasterm         *bool                        `protobuf:"varint,4,opt,name=biasterm,def=1" json:"biasterm,omitempty"`
	WeightFiller     *FillerParameter             `protobuf:"bytes,5,opt,name=weight_filler" json:"weight_filler,omitempty"`
	BiasFiller       *FillerParameter             `protobuf:"bytes,6,opt,name=bias_filler" json:"bias_filler,omitempty"`
	Pad              *uint32                      `protobuf:"varint,7,opt,name=pad,def=0" json:"pad,omitempty"`
	Kernelsize       *uint32                      `protobuf:"varint,8,opt,name=kernelsize" json:"kernelsize,omitempty"`
	Group            *uint32                      `protobuf:"varint,9,opt,name=group,def=1" json:"group,omitempty"`
	Stride           *uint32                      `protobuf:"varint,10,opt,name=stride,def=1" json:"stride,omitempty"`
	Pool             *V0LayerParameter_PoolMethod `protobuf:"varint,11,opt,name=pool,enum=caffe.V0LayerParameter_PoolMethod,def=0" json:"pool,omitempty"`
	DropoutRatio     *float32                     `protobuf:"fixed32,12,opt,name=dropout_ratio,def=0.5" json:"dropout_ratio,omitempty"`
	LocalSize        *uint32                      `protobuf:"varint,13,opt,name=local_size,def=5" json:"local_size,omitempty"`
	Alpha            *float32                     `protobuf:"fixed32,14,opt,name=alpha,def=1" json:"alpha,omitempty"`
	Beta             *float32                     `protobuf:"fixed32,15,opt,name=beta,def=0.75" json:"beta,omitempty"`
	Source           *string                      `protobuf:"bytes,16,opt,name=source" json:"source,omitempty"`
	Scale            *float32                     `protobuf:"fixed32,17,opt,name=scale,def=1" json:"scale,omitempty"`
	Meanfile         *string                      `protobuf:"bytes,18,opt,name=meanfile" json:"meanfile,omitempty"`
	Batchsize        *uint32                      `protobuf:"varint,19,opt,name=batchsize" json:"batchsize,omitempty"`
	Cropsize         *uint32                      `protobuf:"varint,20,opt,name=cropsize,def=0" json:"cropsize,omitempty"`
	Mirror           *bool                        `protobuf:"varint,21,opt,name=mirror,def=0" json:"mirror,omitempty"`
	Blobs            []*BlobProto                 `protobuf:"bytes,50,rep,name=blobs" json:"blobs,omitempty"`
	BlobsLr          []float32                    `protobuf:"fixed32,51,rep,name=blobs_lr" json:"blobs_lr,omitempty"`
	WeightDecay      []float32                    `protobuf:"fixed32,52,rep,name=weight_decay" json:"weight_decay,omitempty"`
	RandSkip         *uint32                      `protobuf:"varint,53,opt,name=rand_skip,def=0" json:"rand_skip,omitempty"`
	DetFgThreshold   *float32                     `protobuf:"fixed32,54,opt,name=det_fg_threshold,def=0.5" json:"det_fg_threshold,omitempty"`
	DetBgThreshold   *float32                     `protobuf:"fixed32,55,opt,name=det_bg_threshold,def=0.5" json:"det_bg_threshold,omitempty"`
	DetFgFraction    *float32                     `protobuf:"fixed32,56,opt,name=det_fg_fraction,def=0.25" json:"det_fg_fraction,omitempty"`
	DetContextPad    *uint32                      `protobuf:"varint,58,opt,name=det_context_pad,def=0" json:"det_context_pad,omitempty"`
	DetCropMode      *string                      `protobuf:"bytes,59,opt,name=det_crop_mode,def=warp" json:"det_crop_mode,omitempty"`
	NewNum           *int32                       `protobuf:"varint,60,opt,name=new_num,def=0" json:"new_num,omitempty"`
	NewChannels      *int32                       `protobuf:"varint,61,opt,name=new_channels,def=0" json:"new_channels,omitempty"`
	NewHeight        *int32                       `protobuf:"varint,62,opt,name=new_height,def=0" json:"new_height,omitempty"`
	NewWidth         *int32                       `protobuf:"varint,63,opt,name=new_width,def=0" json:"new_width,omitempty"`
	ShuffleImages    *bool                        `protobuf:"varint,64,opt,name=shuffle_images,def=0" json:"shuffle_images,omitempty"`
	ConcatDim        *uint32                      `protobuf:"varint,65,opt,name=concat_dim,def=1" json:"concat_dim,omitempty"`
	Hdf5OutputParam  *HDF5OutputParameter         `protobuf:"bytes,1001,opt,name=hdf5_output_param" json:"hdf5_output_param,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *V0LayerParameter) Reset()         { *m = V0LayerParameter{} }
func (m *V0LayerParameter) String() string { return proto.CompactTextString(m) }
func (*V0LayerParameter) ProtoMessage()    {}

const Default_V0LayerParameter_Biasterm bool = true
const Default_V0LayerParameter_Pad uint32 = 0
const Default_V0LayerParameter_Group uint32 = 1
const Default_V0LayerParameter_Stride uint32 = 1
const Default_V0LayerParameter_Pool V0LayerParameter_PoolMethod = V0LayerParameter_MAX
const Default_V0LayerParameter_DropoutRatio float32 = 0.5
const Default_V0LayerParameter_LocalSize uint32 = 5
const Default_V0LayerParameter_Alpha float32 = 1
const Default_V0LayerParameter_Beta float32 = 0.75
const Default_V0LayerParameter_Scale float32 = 1
const Default_V0LayerParameter_Cropsize uint32 = 0
const Default_V0LayerParameter_Mirror bool = false
const Default_V0LayerParameter_RandSkip uint32 = 0
const Default_V0LayerParameter_DetFgThreshold float32 = 0.5
const Default_V0LayerParameter_DetBgThreshold float32 = 0.5
const Default_V0LayerParameter_DetFgFraction float32 = 0.25
const Default_V0LayerParameter_DetContextPad uint32 = 0
const Default_V0LayerParameter_DetCropMode string = "warp"
const Default_V0LayerParameter_NewNum int32 = 0
const Default_V0LayerParameter_NewChannels int32 = 0
const Default_V0LayerParameter_NewHeight int32 = 0
const Default_V0LayerParameter_NewWidth int32 = 0
const Default_V0LayerParameter_ShuffleImages bool = false
const Default_V0LayerParameter_ConcatDim uint32 = 1

func (m *V0LayerParameter) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *V0LayerParameter) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *V0LayerParameter) GetNumOutput() uint32 {
	if m != nil && m.NumOutput != nil {
		return *m.NumOutput
	}
	return 0
}

func (m *V0LayerParameter) GetBiasterm() bool {
	if m != nil && m.Biasterm != nil {
		return *m.Biasterm
	}
	return Default_V0LayerParameter_Biasterm
}

func (m *V0LayerParameter) GetWeightFiller() *FillerParameter {
	if m != nil {
		return m.WeightFiller
	}
	return nil
}

func (m *V0LayerParameter) GetBiasFiller() *FillerParameter {
	if m != nil {
		return m.BiasFiller
	}
	return nil
}

func (m *V0LayerParameter) GetPad() uint32 {
	if m != nil && m.Pad != nil {
		return *m.Pad
	}
	return Default_V0LayerParameter_Pad
}

func (m *V0LayerParameter) GetKernelsize() uint32 {
	if m != nil && m.Kernelsize != nil {
		return *m.Kernelsize
	}
	return 0
}

func (m *V0LayerParameter) GetGroup() uint32 {
	if m != nil && m.Group != nil {
		return *m.Group
	}
	return Default_V0LayerParameter_Group
}

func (m *V0LayerParameter) GetStride() uint32 {
	if m != nil && m.Stride != nil {
		return *m.Stride
	}
	return Default_V0LayerParameter_Stride
}

func (m *V0LayerParameter) GetPool() V0LayerParameter_PoolMethod {
	if m != nil && m.Pool != nil {
		return *m.Pool
	}
	return Default_V0LayerParameter_Pool
}

func (m *V0LayerParameter) GetDropoutRatio() float32 {
	if m != nil && m.DropoutRatio != nil {
		return *m.DropoutRatio
	}
	return Default_V0LayerParameter_DropoutRatio
}

func (m *V0LayerParameter) GetLocalSize() uint32 {
	if m != nil && m.LocalSize != nil {
		return *m.LocalSize
	}
	return Default_V0LayerParameter_LocalSize
}

func (m *V0LayerParameter) GetAlpha() float32 {
	if m != nil && m.Alpha != nil {
		return *m.Alpha
	}
	return Default_V0LayerParameter_Alpha
}

func (m *V0LayerParameter) GetBeta() float32 {
	if m != nil && m.Beta != nil {
		return *m.Beta
	}
	return Default_V0LayerParameter_Beta
}

func (m *V0LayerParameter) GetSource() string {
	if m != nil && m.Source != nil {
		return *m.Source
	}
	return ""
}

func (m *V0LayerParameter) GetScale() float32 {
	if m != nil && m.Scale != nil {
		return *m.Scale
	}
	return Default_V0LayerParameter_Scale
}

func (m *V0LayerParameter) GetMeanfile() string {
	if m != nil && m.Meanfile != nil {
		return *m.Meanfile
	}
	return ""
}

func (m *V0LayerParameter) GetBatchsize() uint32 {
	if m != nil && m.Batchsize != nil {
		return *m.Batchsize
	}
	return 0
}

func (m *V0LayerParameter) GetCropsize() uint32 {
	if m != nil && m.Cropsize != nil {
		return *m.Cropsize
	}
	return Default_V0LayerParameter_Cropsize
}

func (m *V0LayerParameter) GetMirror() bool {
	if m != nil && m.Mirror != nil {
		return *m.Mirror
	}
	return Default_V0LayerParameter_Mirror
}

func (m *V0LayerParameter) GetBlobs() []*BlobProto {
	if m != nil {
		return m.Blobs
	}
	return nil
}

func (m *V0LayerParameter) GetBlobsLr() []float32 {
	if m != nil {
		return m.BlobsLr
	}
	return nil
}

func (m *V0LayerParameter) GetWeightDecay() []float32 {
	if m != nil {
		return m.WeightDecay
	}
	return nil
}

func (m *V0LayerParameter) GetRandSkip() uint32 {
	if m != nil && m.RandSkip != nil {
		return *m.RandSkip
	}
	return Default_V0LayerParameter_RandSkip
}

func (m *V0LayerParameter) GetDetFgThreshold() float32 {
	if m != nil && m.DetFgThreshold != nil {
		return *m.DetFgThreshold
	}
	return Default_V0LayerParameter_DetFgThreshold
}

func (m *V0LayerParameter) GetDetBgThreshold() float32 {
	if m != nil && m.DetBgThreshold != nil {
		return *m.DetBgThreshold
	}
	return Default_V0LayerParameter_DetBgThreshold
}

func (m *V0LayerParameter) GetDetFgFraction() float32 {
	if m != nil && m.DetFgFraction != nil {
		return *m.DetFgFraction
	}
	return Default_V0LayerParameter_DetFgFraction
}

func (m *V0LayerParameter) GetDetContextPad() uint32 {
	if m != nil && m.DetContextPad != nil {
		return *m.DetContextPad
	}
	return Default_V0LayerParameter_DetContextPad
}

func (m *V0LayerParameter) GetDetCropMode() string {
	if m != nil && m.DetCropMode != nil {
		return *m.DetCropMode
	}
	return Default_V0LayerParameter_DetCropMode
}

func (m *V0LayerParameter) GetNewNum() int32 {
	if m != nil && m.NewNum != nil {
		return *m.NewNum
	}
	return Default_V0LayerParameter_NewNum
}

func (m *V0LayerParameter) GetNewChannels() int32 {
	if m != nil && m.NewChannels != nil {
		return *m.NewChannels
	}
	return Default_V0LayerParameter_NewChannels
}

func (m *V0LayerParameter) GetNewHeight() int32 {
	if m != nil && m.NewHeight != nil {
		return *m.NewHeight
	}
	return Default_V0LayerParameter_NewHeight
}

func (m *V0LayerParameter) GetNewWidth() int32 {
	if m != nil && m.NewWidth != nil {
		return *m.NewWidth
	}
	return Default_V0LayerParameter_NewWidth
}

func (m *V0LayerParameter) GetShuffleImages() bool {
	if m != nil && m.ShuffleImages != nil {
		return *m.ShuffleImages
	}
	return Default_V0LayerParameter_ShuffleImages
}

func (m *V0LayerParameter) GetConcatDim() uint32 {
	if m != nil && m.ConcatDim != nil {
		return *m.ConcatDim
	}
	return Default_V0LayerParameter_ConcatDim
}

func (m *V0LayerParameter) GetHdf5OutputParam() *HDF5OutputParameter {
	if m != nil {
		return m.Hdf5OutputParam
	}
	return nil
}

func init() {
	proto.RegisterEnum("caffe.Phase", Phase_name, Phase_value)
	proto.RegisterEnum("caffe.SolverParameter_SolverMode", SolverParameter_SolverMode_name, SolverParameter_SolverMode_value)
	proto.RegisterEnum("caffe.SolverParameter_SolverType", SolverParameter_SolverType_name, SolverParameter_SolverType_value)
	proto.RegisterEnum("caffe.LayerParameter_LayerType", LayerParameter_LayerType_name, LayerParameter_LayerType_value)
	proto.RegisterEnum("caffe.LayerParameter_DimCheckMode", LayerParameter_DimCheckMode_name, LayerParameter_DimCheckMode_value)
	proto.RegisterEnum("caffe.ConvolutionParameter_Engine", ConvolutionParameter_Engine_name, ConvolutionParameter_Engine_value)
	proto.RegisterEnum("caffe.DataParameter_DB", DataParameter_DB_name, DataParameter_DB_value)
	proto.RegisterEnum("caffe.EltwiseParameter_EltwiseOp", EltwiseParameter_EltwiseOp_name, EltwiseParameter_EltwiseOp_value)
	proto.RegisterEnum("caffe.HingeLossParameter_Norm", HingeLossParameter_Norm_name, HingeLossParameter_Norm_value)
	proto.RegisterEnum("caffe.LRNParameter_NormRegion", LRNParameter_NormRegion_name, LRNParameter_NormRegion_value)
	proto.RegisterEnum("caffe.PoolingParameter_PoolMethod", PoolingParameter_PoolMethod_name, PoolingParameter_PoolMethod_value)
	proto.RegisterEnum("caffe.PoolingParameter_Engine", PoolingParameter_Engine_name, PoolingParameter_Engine_value)
	proto.RegisterEnum("caffe.ReLUParameter_Engine", ReLUParameter_Engine_name, ReLUParameter_Engine_value)
	proto.RegisterEnum("caffe.SigmoidParameter_Engine", SigmoidParameter_Engine_name, SigmoidParameter_Engine_value)
	proto.RegisterEnum("caffe.SoftmaxParameter_Engine", SoftmaxParameter_Engine_name, SoftmaxParameter_Engine_value)
	proto.RegisterEnum("caffe.TanHParameter_Engine", TanHParameter_Engine_name, TanHParameter_Engine_value)
	proto.RegisterEnum("caffe.V0LayerParameter_PoolMethod", V0LayerParameter_PoolMethod_name, V0LayerParameter_PoolMethod_value)
}
